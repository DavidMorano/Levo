Here is the first batch of simulation.  It actually makes up most of 
the simulations that we wanted to have.  I have simulated  a couple more 
configurations as well.  The simulations for GAP are not completed yet and 
I will send them later.

I also have the branch profiles and I am working on the graphs.  I am
going to create them in Matlab but if you of a better tool, please let me
know.

For the paper, I suggest that we use speedup instead of IPC
numbers.  People seem to be more sensitive to IPC numbers and since we are
only talking about D-paths, it makes sense to talk about
speedup. including IPC requires a more through discussion on Levo
architecture and memory hierarchy which we are trying to present in this
paper.

---------------------

L1: 32K, 2 way set associative, Miss penalty: 20 cycles

SG	AS/SG	COLS	D-PATHS	IPC
benchmark: gap
8	4	16	0	5.186
8	16	16	0	6.035
8	8	8	0	6.123
8	16	8	0	6.603
				
8	4	8	0	4.827
8	4	4	0	4.126

8	4	16	1	5.671
				
8	8	8	1	6.563
8	16	8	1	6.617
				
8	4	8	1	5.325
8	4	4	1	4.686
				
				
8	8	8	2	6.732
8	16	8	2	6.602
				
8	4	8	2	5.560
				
				
				
8	8	8	3	7.003
8	16	8	3	6.713
				
				
				
				
				
8	8	8	4	7.292
8	16	8	4	7.081
				
				
				
8	4	16	5	6.719
8	16	16	5	7.111
8	8	8	5	7.406
				
8	8	16	5	8.420
				
				
				
				
8	8	8	6	7.419
				
				
				
				
				
8	16	16	7	7.338
8	8	8	7	7.419
				
8	8	16	7	8.521
8	4	8	7	5.988
				
benchmark: gzip
8	4	16	0	3.511
8	16	16	0	5.114
8	8	8	0	4.323
8	16	8	0	4.996
8	8	16	0	4.565
8	4	8	0	3.356

8	4	16	1	3.818
8	16	16	1	5.291
8	8	8	1	4.602
8	16	8	1	5.189
8	8	16	1	4.769
8	4	8	1	3.712

8	4	16	2	4.017
8	16	16	2	5.390
8	8	8	2	4.760
8	16	8	2	5.323
8	8	16	2	4.898
8	4	8	2	3.922

8	4	16	3	4.346
8	16	16	3	5.619
8	8	8	3	5.102
8	16	8	3	5.579
8	8	16	3	5.152
8	4	8	3	4.226

8	4	16	4	4.585
8	16	16	4	5.853
8	8	8	4	5.345
8	16	8	4	5.896
8	8	16	4	5.453
8	4	8	4	4.279

8	4	16	5	4.612
8	16	16	5	6.109
8	8	8	5	5.358
8	16	8	5	6.082
8	8	16	5	5.614
8	4	8	5	4.279

8	4	16	6	4.612
8	16	16	6	6.191
8	8	8	6	5.358
8	16	8	6	6.084
8	8	16	6	5.616
8	4	8	6	4.279

8	4	16	7	4.612
8	16	16	7	6.192
8	8	8	7	5.358
8	16	8	7	6.084
8	8	16	7	5.616
8	4	8	7	4.279

benchmark: parser
8	4	16	0	2.799
8	16	16	0	3.867
8	8	8	0	3.428
8	16	8	0	3.856
8	8	16	0	3.416
8	4	8	0	2.844
8	4	4	0	2.749

8	4	16	1	2.950
8	16	16	1	3.928
8	8	8	1	3.573
8	16	8	1	3.944
8	8	16	1	3.495
8	4	8	1	3.038
8	4	4	1	3.026

8	4	16	2	3.079
8	16	16	2	3.990
8	8	8	2	3.661
8	16	8	2	4.009
8	8	16	2	3.573
8	4	8	2	3.167
8	4	4	2	3.177

8	4	16	3	3.233
8	16	16	3	4.095
8	8	8	3	3.797
8	16	8	3	4.103
8	8	16	3	3.684
8	4	8	3	3.361
8	4	4	3	3.446

8	4	16	4	3.514
8	16	16	4	4.304
8	8	8	4	4.089
8	16	8	4	4.369
8	8	16	4	3.924
8	4	8	4	3.647
8	4	4	4	3.539

8	4	16	5	3.724
8	16	16	5	4.471
8	8	8	5	4.342
8	16	8	5	4.551
8	8	16	5	4.078
8	4	8	5	3.700
8	4	4	5	3.528

8	4	16	6	3.739
8	16	16	6	4.828
8	8	8	6	4.344
8	16	8	6	4.699
8	8	16	6	4.259
8	4	8	6	3.700
8	4	4	6	3.528

8	4	16	7	3.739
8	16	16	7	5.240
8	8	8	7	4.345
8	16	8	7	4.822
8	8	16	7	4.322
8	4	8	7	3.700
8	4	4	7	3.528

benchmark: go
8	4	16	0	2.678
8	16	16	0	3.549
8	8	8	0	3.198
8	16	8	0	3.588
8	8	16	0	3.230
8	4	8	0	2.645
8	4	4	0	2.409

8	4	16	1	2.918
8	16	16	1	3.706
8	8	8	1	3.430
8	16	8	1	3.757
8	8	16	1	3.413
8	4	8	1	2.947
8	4	4	1	2.806

8	4	16	2	3.104
8	16	16	2	3.876
8	8	8	2	3.638
8	16	8	2	3.940
8	8	16	2	3.591
8	4	8	2	3.185
8	4	4	2	3.105

8	4	16	3	3.418
8	16	16	3	4.112
8	8	8	3	3.969
8	16	8	3	4.205
8	8	16	3	3.856
8	4	8	3	3.571
8	4	4	3	3.461

8	4	16	4	3.805
8	16	16	4	4.404
8	8	8	4	4.365
8	16	8	4	4.525
8	8	16	4	4.178
8	4	8	4	3.953
8	4	4	4	3.605

8	4	16	5	4.103
8	16	16	5	4.783
8	8	8	5	4.695
8	16	8	5	4.904
8	8	16	5	4.535
8	4	8	5	4.095
8	4	4	5	3.622

8	4	16	6	4.224
8	16	16	6	5.064
8	8	8	6	4.807
8	16	8	6	5.143
8	8	16	6	4.781
8	4	8	6	4.108
8	4	4	6	3.622

8	4	16	7	4.237
8	16	16	7	5.164
8	8	8	7	4.816
8	16	8	7	5.185
8	8	16	7	4.822
8	4	8	7	4.108
8	4	4	7	3.622


benchmark: bzip2
8	4	16	0	3.513
8	16	16	0	5.029
8	8	8	0	4.334
8	16	8	0	4.974
8	8	16	0	4.390
8	4	8	0	3.558
8	4	4	0	3.052

8	4	16	1	3.651
8	16	16	1	5.152
8	8	8	1	4.489
8	16	8	1	5.101
8	8	16	1	4.515
8	4	8	1	3.719
8	4	4	1	3.245

8	4	16	2	3.760
8	16	16	2	5.222
8	8	8	2	4.577
8	16	8	2	5.206
8	8	16	2	4.585
8	4	8	2	3.850
8	4	4	2	3.400

8	4	16	3	3.813
8	16	16	3	5.265
8	8	8	3	4.621
8	16	8	3	5.249
8	8	16	3	4.632
8	4	8	3	3.929
8	4	4	3	3.453

8	4	16	4	3.872
8	16	16	4	5.298
8	8	8	4	4.657
8	16	8	4	5.281
8	8	16	4	4.685
8	4	8	4	3.984
8	4	4	4	3.451

8	4	16	5	3.886
8	16	16	5	5.319
8	8	8	5	4.675
8	16	8	5	5.322
8	8	16	5	4.743
8	4	8	5	3.985
8	4	4	5	3.451

8	4	16	6	3.886
8	16	16	6	5.358
8	8	8	6	4.675
8	16	8	6	5.339
8	8	16	6	4.750
8	4	8	6	3.985
8	4	4	6	3.451

8	4	16	7	3.886
8	16	16	7	5.372
8	8	8	7	4.675
8	16	8	7	5.339
8	8	16	7	4.750
8	4	8	7	3.985
8	4	4	7	3.451



