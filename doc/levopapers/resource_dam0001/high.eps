%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 37 333 582 752
%%Title: (high.dr)
%%Creator: (AppleWorks: LaserWriter 8 8.6)
%%CreationDate: (18:34 Tuesday, 2000 January, 11)
%%For: (dam)
%%Routing: (mailto:\000morano@computer.org)
%%Pages: 1
%%DocumentFonts: Helvetica
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%%DocumentMedia: Default 612 792 0 () ()
%RBINumCopies: 1
%RBINupNess: 1 1
%ADO_ImageableArea: 30 31 582 761
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
userdict/dscInfo 5 dict dup begin
/Title(high.dr)def
/Creator(AppleWorks: LaserWriter 8 8.6)def
/CreationDate(18:34 Tuesday, 2000 January, 11)def
/For(dam)def
/Pages 1 def
end put
%%BeginProlog
/md 178 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: lw8_feature-1.01
%%Copyright: Copyright 1990-1998 Adobe Systems Incorporated and Apple Computer Incorporated. All Rights Reserved.
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/Z{0 def}bd
/T true def
/F false def
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
F
}ifelse
def
/odictstk Z
/oopstk Z
/fcl
{
count oopstk sub dup 0 gt
{
{pop}repeat
}{
pop
}ifelse
countdictstack odictstk sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/sfcl2
{
/odictstk countdictstack store
count/oopstk xs
}bd
/efcl2
{
stopped{$error/newerror F put}if
fcl
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
/setcopies{
level2
{
1 dict begin/NumCopies exch def currentdict end setpagedevice
}{
userdict/#copies 3 -1 roll put
}ifelse
}def
level2 startnoload
/ststpgdev{}def
/dopgdev{}def
/stpgdev{}def
/buf Z
/didstop T def
/sfcl
{
/didstop T store
/odictstk countdictstack store
count/oopstk xs
currentfile cvx stopped
{
$error/newerror F put
didstop
{
save/didstop xs
/buf vmstatus exch sub exch pop dup 0 lt{pop 0}if
dup 64000 gt{pop 64000}if string store
{
currentfile buf readline
{
(}efcl)eq{exit}if
}{
/UnexpectedEOF errordict/rangecheck get exec
}ifelse
}loop
didstop restore
}if
}if
fcl
}bd
/efcl
{
/didstop F store
exec
stop
}bd
level2 endnoload level2 not startnoload
/setpagedevice where{pop/realstpgdev/setpagedevice ld}if
/SC_topddict Z
/SC_spdict Z
/$spusrdict F def
/dopgdev
{
userdict/setpagedevice undef
$spusrdict
{
userdict/setpagedevice/realstpgdev load put
/$spusrdict F store
}if
SC_topddict realstpgdev
}bd
/stpgdev
{
SC_topddict dup 3 -1 roll
{
SC_spdict 2 index known
{
SC_spdict 2 index get
dup 3 -1 roll
{
put dup
}forall
pop put dup
}{
put dup
}ifelse
}forall
pop pop
}bd
/ststpgdev
{
/setpagedevice where
{
userdict eq
{
/$spusrdict T store
}if
}if
userdict/setpagedevice/stpgdev load put
/SC_topddict 0 dict store
/SC_spdict 3 dict begin
/InputAttributes 0 dict def
/Policies 0 dict def
/OutputAttributes 0 dict def
currentdict
end
store
}def
/sfcl/sfcl2 ld
/efcl/efcl2 ld
level2 not endnoload
%%EndFile
%%BeginFile: lw8_basic-3.0
/xdf{exch def}bd
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
12{ld}repeat
/framewidth -1 def
/QDframwid -1 def
/numframes Z
/mTS matrix def
/$m matrix def
/av 86 def
/por T def
/normland F def
/psb-nosave{}def
/pse-nosave{}def
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level3
/languagelevel where
{
pop languagelevel 3 ge
}{
F
}ifelse
def
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/devg/DeviceGray def
/devr/DeviceRGB def
/devc/DeviceCMYK def
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/devg[/DeviceGray]def
/devr[/DeviceRGB]def
/devc[/DeviceCMYK]def
level2 not endnoload
/pm Z
/mT Z
/sD Z
/initializepage
{
mT $m currentmatrix mTS concatmatrix pop
/pm save store mT concat
}bd
/endp
{
pm restore
}bd
/adjRect
{
dup 2 mul 6 2 roll
4 index sub exch 5 -1 roll sub exch
4 2 roll
4 index add exch 5 -1 roll add exch
4 2 roll
}bd
/frame1up
{
gS
mTS setmatrix
QDframwid lw
/setstrokeadjust where{pop T setstrokeadjust}if
clippath pathbbox
2 index sub exch
3 index sub exch
currentlinewidth framewidth mul
adjRect
numframes dup 0 lt{pop 0}if
{
4 copy
rS
currentlinewidth framewidth
mul 4 mul
adjRect
}repeat
pop pop pop pop
gR
}bd
/$c devr def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
level3 startnoload
%%BeginFile: lw8_safeclipL12-1.0					
/rectclip where
{
pop/rCa/rectclip ld
}{
/rCa
{
np 0
1 index length 4 idiv
{
2 copy
4 getinterval
aload pop
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
4 add
}repeat
clip np
pop pop
}bd
}ifelse
/savedstack Z
/subsavedstack Z
/execstring Z
/saferCa
{
/execstring xs
/odictstk countdictstack store
/oopstk 0 store
count 0 ne
{
savedstack 0 eq{
count 100 gt{count}{100}ifelse
array/savedstack xs
}{
count savedstack length gt
{
count array/savedstack xs
}if
}ifelse
count savedstack 0 3 -1 roll
getinterval
astore/subsavedstack xs
}{
/subsavedstack 0 store
}ifelse
execstring cvx stopped
{
$error/newerror F put
newpath
}if
fcl
subsavedstack 0 ne{
subsavedstack aload pop
}if
}bd
%%EndFile
level3 endnoload level3 not startnoload
%%BeginFile: lw8_safeclipL3-1.0	
/saferCa/pop ld
%%EndFile
level3 not endnoload
%%BeginFile: lw8_level1_colorspace-2.0
/G/setgray ld
/:F1/setgray ld
/:F/setrgbcolor ld
/:F4/setcmykcolor where
{
pop
/setcmykcolor ld
}{
{
3
{
dup
3 -1 roll add
dup 1 gt{pop 1}if
1 exch sub
4 1 roll
}repeat
pop
setrgbcolor
}bd
}ifelse
/:Fx
{
counttomark
{0{G}0{:F}{:F4}}
exch get
exec
pop
}bd
/$cs Z
/:rg{devr :ss}bd
/:sc{$cs :ss}bd
/:dc
{
dup type/arraytype eq{0 get}if
dup/DeviceCMYK eq
{
pop devc
}{
/DeviceGray eq
{
devg
}{
devr
}ifelse
}ifelse
/$cs xdf
}bd
/:sgl{}def
/:dr{}bd
/:fCRD{pop}bd
/:ckcs{}bd
/:ss{/$c xdf}bd
%%EndFile
%%BeginFile: lw8_basic_text-2.1
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg T def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg F store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding dup 9/space put dup 39/quotesingle put 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/Euro/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
/$ckeyd md def
/:skey
{
1 index maxlength 2 index
length sub
ge
{
begin
/$mkeys 20 dict def
/$mkeys load
end
dup/$ckeyd xs
}if
3 1 roll put
}bd
/fD1pass
{
40
$ckeyd
//md
ne
{
pop 1
}if
$ckeyd exch
:skey
}bd
/:searchdict Z
/:searchdict
{
exch 2 copy
known
{
get
}{
exch/$mkeys
get
:searchdict
}ifelse
}bd
/lU
{
//md exch 2 copy
known
{
get
}{
exch
/$mkeys get
:searchdict
}ifelse
}bd
/:xs{
exch 0 1 2 index length 1 sub{
3 copy
gsave 1 getinterval show grestore
exch
get 0.0
rmoveto
}for pop pop
}bd
/:ys{
exch 0 1 2 index length 1 sub{
3 copy
gsave 1 getinterval show grestore
exch
get 0.0 exch
rmoveto
}for pop pop
}bd
/:xys{
exch 0 1 2 index length 1 sub{
3 copy
gsave 1 getinterval show grestore
exch 2 mul 2 copy
1 add get 3 -2 roll get exch
rmoveto
}for pop pop
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
/fD1pass/def ld
/lU/load ld
level2{
/:xs/xshow ld
/:ys/yshow ld
/:xys/xyshow ld
}if
level2 not endnoload
/fD Z
/sf Z
/scf Z
/sf1pass
{
lU setfont
}bd
/scf1pass
{
exch lU exch scalefont fD
}bd
/scf2pass
{
scalefont fD
}bd
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff fD
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff fD
}bd
/ps Z
/fz{/ps xs}bd
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
fD
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
/fD/def ld/sf/setfont ld /scf/scf2pass ld
/mT[1 0 0 -1 30 761]def
/sD 16 dict def
%%IncludeFont: Helvetica
/f44/Helvetica
:mre
/f58 f44 10 scf
/f71 f44 12 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%PostScript Hack by Mike Brors 12/7/90
/DisableNextSetRGBColor
	{
	userdict begin
	/setrgbcolor 
		{
		pop
		pop
		pop
		userdict begin
		/setrgbcolor systemdict /setrgbcolor get def
		end
		} def
	end
} bind def
/bcarray where {
	pop
	bcarray 2 {
		/da 4 ps div def
		df setfont gsave cs wi
		1 index 0 ne{exch da add exch}if grestore setcharwidth
		cs 0 0 smc da 0 smc da da smc 0 da smc c
		gray
		{ gl}
		{1 setgray}ifelse
		da 2. div dup moveto show
	}bind put
} if
%
% Used to snap to device pixels, 1/4th of the pixel in.
/stp {  % x y  pl  x y                % Snap To Pixel, pixel  (auto stroke adjust)
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} bind def

/snapmoveto { % x y  m  -             % moveto, auto stroke adjust
	stp  moveto
} bind def

/snaplineto { % x y  l  -             % lineto, auto stroke adjust
	stp lineto
} bind def
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
%%EndPageSetup
gS 0 0 552 730 rC
1 G
404 143 28 262 rF
0 G
404.5 143.5 27 261 rS
1 G
359 143 28 262 rF
0 G
359.5 143.5 27 261 rS
9 36 144 60 rC
gR
gS 4 0 154 96 rC
9 45 :M
f58 sf
-.112(8 ML    Active Stations)A
9 57 :M
.039 .004(8 DEE Active Stations)J
9 69 :M
-.021(2 ML columns)A
9 81 :M
.031 .003(2 DEE columns)J
9 93 :M
-.015(4  sharing groups)A
gR
gS 122 11 279 14 rC
gR
gS 117 0 289 25 rC
194 21 :M
f71 sf
1.085 .108(High-level block diagram)J
gR
gS 0 0 552 730 rC
1 G
26 152 37 28 rF
0 G
26.5 152.5 36 27 rS
1 G
98 152 37 28 rF
0 G
98.5 152.5 36 27 rS
1 G
170 152 37 28 rF
0 G
170.5 152.5 36 27 rS
1 G
242 152 37 28 rF
0 G
242.5 152.5 36 27 rS
36 162 14 12 rC
gR
gS 31 126 24 48 rC
36 171 :M
f58 sf
.66(AS)A
gR
gS 27 108 36 12 rC
gR
gS 22 72 46 48 rC
38 117 :M
f58 sf
.113(ML)A
gR
gS 171 108 36 12 rC
gR
gS 166 72 46 48 rC
182 117 :M
f58 sf
.113(ML)A
gR
gS 243 108 36 12 rC
gR
gS 238 72 46 48 rC
251 117 :M
f58 sf
.221(DEE)A
gR
gS 99 108 36 12 rC
gR
gS 94 72 46 48 rC
107 117 :M
f58 sf
.221(DEE)A
gR
gS 108 162 14 12 rC
gR
gS 103 126 24 48 rC
108 171 :M
f58 sf
.66(AS)A
gR
gS 180 162 14 12 rC
gR
gS 175 126 24 48 rC
180 171 :M
f58 sf
.66(AS)A
gR
gS 252 162 14 12 rC
gR
gS 247 126 24 48 rC
252 171 :M
1 G
f58 sf
0 G
.66(AS)A
gR
1 G
gS 0 0 552 730 rC
26 224 37 28 rF
0 G
26.5 224.5 36 27 rS
1 G
98 224 37 28 rF
0 G
98.5 224.5 36 27 rS
1 G
170 224 37 28 rF
0 G
170.5 224.5 36 27 rS
1 G
242 224 37 28 rF
0 G
242.5 224.5 36 27 rS
36 234 14 12 rC
gR
gS 31 198 24 48 rC
36 243 :M
0 G
f58 sf
.66(AS)A
gR
0 G
gS 108 234 14 12 rC
gR
gS 103 198 24 48 rC
108 243 :M
f58 sf
.66(AS)A
gR
gS 180 234 14 12 rC
gR
gS 175 198 24 48 rC
180 243 :M
f58 sf
.66(AS)A
gR
gS 252 234 14 12 rC
gR
gS 247 198 24 48 rC
252 243 :M
1 G
f58 sf
0 G
.66(AS)A
gR
1 G
gS 0 0 552 730 rC
26 296 37 28 rF
0 G
26.5 296.5 36 27 rS
1 G
98 296 37 28 rF
0 G
98.5 296.5 36 27 rS
1 G
170 296 37 28 rF
0 G
170.5 296.5 36 27 rS
1 G
242 296 37 28 rF
0 G
242.5 296.5 36 27 rS
36 306 14 12 rC
gR
gS 31 270 24 48 rC
36 315 :M
0 G
f58 sf
.66(AS)A
gR
0 G
gS 108 306 14 12 rC
gR
gS 103 270 24 48 rC
108 315 :M
f58 sf
.66(AS)A
gR
gS 180 306 14 12 rC
gR
gS 175 270 24 48 rC
180 315 :M
f58 sf
.66(AS)A
gR
gS 252 306 14 12 rC
gR
gS 247 270 24 48 rC
252 315 :M
1 G
f58 sf
0 G
.66(AS)A
gR
1 G
gS 0 0 552 730 rC
26 368 37 28 rF
0 G
26.5 368.5 36 27 rS
1 G
98 368 37 28 rF
0 G
98.5 368.5 36 27 rS
1 G
170 368 37 28 rF
0 G
170.5 368.5 36 27 rS
1 G
242 368 37 28 rF
0 G
242.5 368.5 36 27 rS
36 378 14 12 rC
gR
gS 31 342 24 48 rC
36 387 :M
0 G
f58 sf
.66(AS)A
gR
0 G
gS 108 378 14 12 rC
gR
gS 103 342 24 48 rC
108 387 :M
f58 sf
.66(AS)A
gR
gS 180 378 14 12 rC
gR
gS 175 342 24 48 rC
180 387 :M
f58 sf
.66(AS)A
gR
gS 252 378 14 12 rC
gR
gS 247 342 24 48 rC
252 387 :M
f58 sf
.66(AS)A
gR
gS 0 0 552 730 rC
.016 lw
17.5 143.5 126 117 rS
161.5 143.5 126 117 rS
17.5 287.5 126 117 rS
161.5 287.5 126 117 rS
8.5 134.5 288 279 rS
14 416 279 12 rC
gR
gS 9 380 289 48 rC
111 425 :M
f58 sf
.203 .02(Instruction Window)J
gR
gS 299 215 240 126 rC
gS
419 278 :T
-90 rotate
-419 -278 :T
380 281 :M
f58 sf
-.062(memory  interface)A
gR
0 0 :M
356 272 :T
psb
pse
gR
gS 0 0 552 730 rC
254 215 240 126 rC
gS
374 278 :T
-90 rotate
-374 -278 :T
345 281 :M
f58 sf
-.077(ISA  registers)A
gR
0 0 :M
311 272 :T
psb
pse
gR
gS 0 0 552 730 rC
1 G
449 143 28 262 rF
0 G
449.5 143.5 27 261 rS
344 215 208 126 rC
gS
464 278 :T
-90 rotate
-464 -278 :T
428 281 :M
f58 sf
-.103(memory  caches)A
gR
0 0 :M
401 272 :T
psb
pse
gR
gS 0 0 552 730 rC
1 G
494 143 28 262 rF
0 G
494.5 143.5 27 261 rS
389 215 163 126 rC
gS
509 278 :T
-90 rotate
-509 -278 :T
479 281 :M
f58 sf
-.211(main  memory)A
gR
0 0 :M
446 272 :T
psb
pse
gR
gS 0 0 552 730 rC
1 G
314 89 109 37 rF
0 G
314.5 89.5 108 36 rS
320 101 99 24 rC
gR
gS 315 65 109 60 rC
336 110 :M
f58 sf
-.025(branch tracking)A
356 122 :M
1 G
0 G
.288(buffer)A
gR
1 G
gS 0 0 552 730 rC
314 35 109 37 rF
0 G
314.5 35.5 108 36 rS
320 47 99 24 rC
gR
gS 315 11 109 60 rC
346 56 :M
0 G
f58 sf
-.024(I-fetch and)A
331 68 :M
1 G
0 G
.507 .051(branch prediction)J
gR
gS 0 0 552 730 rC
314 143 28 262 rF
0 G
314.5 143.5 27 261 rS
209 215 240 126 rC
gS
329 278 :T
-90 rotate
-329 -278 :T
287 281 :M
f58 sf
-.051(station  load  buffer)A
gR
0 0 :M
266 272 :T
psb
pse
gR
0 G
gS 0 0 552 730 rC
endp
showpage
%%Trailer
end
%%EOF
