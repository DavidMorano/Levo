%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 100 302 456 625
%%Title: (registers2.dr)
%%Creator: (AppleWorks: LaserWriter 8 8.6)
%%CreationDate: (13:09 Wednesday, 2000 January, 12)
%%For: (dam)
%%Routing: (mailto:\000morano@computer.org)
%%Pages: 1
%%DocumentFonts: Helvetica
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%%DocumentMedia: Default 612 792 0 () ()
%RBINumCopies: 1
%RBINupNess: 1 1
%ADO_ImageableArea: 30 31 582 761
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
userdict/dscInfo 5 dict dup begin
/Title(registers2.dr)def
/Creator(AppleWorks: LaserWriter 8 8.6)def
/CreationDate(13:09 Wednesday, 2000 January, 12)def
/For(dam)def
/Pages 1 def
end put
%%BeginProlog
/md 200 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: lw8_feature-1.01
%%Copyright: Copyright 1990-1998 Adobe Systems Incorporated and Apple Computer Incorporated. All Rights Reserved.
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/Z{0 def}bd
/T true def
/F false def
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
F
}ifelse
def
/odictstk Z
/oopstk Z
/fcl
{
count oopstk sub dup 0 gt
{
{pop}repeat
}{
pop
}ifelse
countdictstack odictstk sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/sfcl2
{
/odictstk countdictstack store
count/oopstk xs
}bd
/efcl2
{
stopped{$error/newerror F put}if
fcl
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
/setcopies{
level2
{
1 dict begin/NumCopies exch def currentdict end setpagedevice
}{
userdict/#copies 3 -1 roll put
}ifelse
}def
level2 startnoload
/ststpgdev{}def
/dopgdev{}def
/stpgdev{}def
/buf Z
/didstop T def
/sfcl
{
/didstop T store
/odictstk countdictstack store
count/oopstk xs
currentfile cvx stopped
{
$error/newerror F put
didstop
{
save/didstop xs
/buf vmstatus exch sub exch pop dup 0 lt{pop 0}if
dup 64000 gt{pop 64000}if string store
{
currentfile buf readline
{
(}efcl)eq{exit}if
}{
/UnexpectedEOF errordict/rangecheck get exec
}ifelse
}loop
didstop restore
}if
}if
fcl
}bd
/efcl
{
/didstop F store
exec
stop
}bd
level2 endnoload level2 not startnoload
/setpagedevice where{pop/realstpgdev/setpagedevice ld}if
/SC_topddict Z
/SC_spdict Z
/$spusrdict F def
/dopgdev
{
userdict/setpagedevice undef
$spusrdict
{
userdict/setpagedevice/realstpgdev load put
/$spusrdict F store
}if
SC_topddict realstpgdev
}bd
/stpgdev
{
SC_topddict dup 3 -1 roll
{
SC_spdict 2 index known
{
SC_spdict 2 index get
dup 3 -1 roll
{
put dup
}forall
pop put dup
}{
put dup
}ifelse
}forall
pop pop
}bd
/ststpgdev
{
/setpagedevice where
{
userdict eq
{
/$spusrdict T store
}if
}if
userdict/setpagedevice/stpgdev load put
/SC_topddict 0 dict store
/SC_spdict 3 dict begin
/InputAttributes 0 dict def
/Policies 0 dict def
/OutputAttributes 0 dict def
currentdict
end
store
}def
/sfcl/sfcl2 ld
/efcl/efcl2 ld
level2 not endnoload
%%EndFile
%%BeginFile: lw8_basic-3.0
/xdf{exch def}bd
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
12{ld}repeat
/framewidth -1 def
/QDframwid -1 def
/numframes Z
/mTS matrix def
/$m matrix def
/av 86 def
/por T def
/normland F def
/psb-nosave{}def
/pse-nosave{}def
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level3
/languagelevel where
{
pop languagelevel 3 ge
}{
F
}ifelse
def
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/devg/DeviceGray def
/devr/DeviceRGB def
/devc/DeviceCMYK def
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/devg[/DeviceGray]def
/devr[/DeviceRGB]def
/devc[/DeviceCMYK]def
level2 not endnoload
/pm Z
/mT Z
/sD Z
/initializepage
{
mT $m currentmatrix mTS concatmatrix pop
/pm save store mT concat
}bd
/endp
{
pm restore
}bd
/adjRect
{
dup 2 mul 6 2 roll
4 index sub exch 5 -1 roll sub exch
4 2 roll
4 index add exch 5 -1 roll add exch
4 2 roll
}bd
/frame1up
{
gS
mTS setmatrix
QDframwid lw
/setstrokeadjust where{pop T setstrokeadjust}if
clippath pathbbox
2 index sub exch
3 index sub exch
currentlinewidth framewidth mul
adjRect
numframes dup 0 lt{pop 0}if
{
4 copy
rS
currentlinewidth framewidth
mul 4 mul
adjRect
}repeat
pop pop pop pop
gR
}bd
/$c devr def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
level3 startnoload
%%BeginFile: lw8_safeclipL12-1.0					
/rectclip where
{
pop/rCa/rectclip ld
}{
/rCa
{
np 0
1 index length 4 idiv
{
2 copy
4 getinterval
aload pop
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
4 add
}repeat
clip np
pop pop
}bd
}ifelse
/savedstack Z
/subsavedstack Z
/execstring Z
/saferCa
{
/execstring xs
/odictstk countdictstack store
/oopstk 0 store
count 0 ne
{
savedstack 0 eq{
count 100 gt{count}{100}ifelse
array/savedstack xs
}{
count savedstack length gt
{
count array/savedstack xs
}if
}ifelse
count savedstack 0 3 -1 roll
getinterval
astore/subsavedstack xs
}{
/subsavedstack 0 store
}ifelse
execstring cvx stopped
{
$error/newerror F put
newpath
}if
fcl
subsavedstack 0 ne{
subsavedstack aload pop
}if
}bd
%%EndFile
level3 endnoload level3 not startnoload
%%BeginFile: lw8_safeclipL3-1.0	
/saferCa/pop ld
%%EndFile
level3 not endnoload
%%BeginFile: lw8_level1_colorspace-2.0
/G/setgray ld
/:F1/setgray ld
/:F/setrgbcolor ld
/:F4/setcmykcolor where
{
pop
/setcmykcolor ld
}{
{
3
{
dup
3 -1 roll add
dup 1 gt{pop 1}if
1 exch sub
4 1 roll
}repeat
pop
setrgbcolor
}bd
}ifelse
/:Fx
{
counttomark
{0{G}0{:F}{:F4}}
exch get
exec
pop
}bd
/$cs Z
/:rg{devr :ss}bd
/:sc{$cs :ss}bd
/:dc
{
dup type/arraytype eq{0 get}if
dup/DeviceCMYK eq
{
pop devc
}{
/DeviceGray eq
{
devg
}{
devr
}ifelse
}ifelse
/$cs xdf
}bd
/:sgl{}def
/:dr{}bd
/:fCRD{pop}bd
/:ckcs{}bd
/:ss{/$c xdf}bd
%%EndFile
%%BeginFile: lw8_uniform_graphics-2.0
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/@c
{
moveto 0 rlineto stroke
}bd
/@w
{
moveto 0 exch rlineto stroke
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: lw8_basic_text-2.1
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg T def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg F store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding dup 9/space put dup 39/quotesingle put 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/Euro/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
/$ckeyd md def
/:skey
{
1 index maxlength 2 index
length sub
ge
{
begin
/$mkeys 20 dict def
/$mkeys load
end
dup/$ckeyd xs
}if
3 1 roll put
}bd
/fD1pass
{
40
$ckeyd
//md
ne
{
pop 1
}if
$ckeyd exch
:skey
}bd
/:searchdict Z
/:searchdict
{
exch 2 copy
known
{
get
}{
exch/$mkeys
get
:searchdict
}ifelse
}bd
/lU
{
//md exch 2 copy
known
{
get
}{
exch
/$mkeys get
:searchdict
}ifelse
}bd
/:xs{
exch 0 1 2 index length 1 sub{
3 copy
gsave 1 getinterval show grestore
exch
get 0.0
rmoveto
}for pop pop
}bd
/:ys{
exch 0 1 2 index length 1 sub{
3 copy
gsave 1 getinterval show grestore
exch
get 0.0 exch
rmoveto
}for pop pop
}bd
/:xys{
exch 0 1 2 index length 1 sub{
3 copy
gsave 1 getinterval show grestore
exch 2 mul 2 copy
1 add get 3 -2 roll get exch
rmoveto
}for pop pop
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
/fD1pass/def ld
/lU/load ld
level2{
/:xs/xshow ld
/:ys/yshow ld
/:xys/xyshow ld
}if
level2 not endnoload
/fD Z
/sf Z
/scf Z
/sf1pass
{
lU setfont
}bd
/scf1pass
{
exch lU exch scalefont fD
}bd
/scf2pass
{
scalefont fD
}bd
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff fD
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff fD
}bd
/ps Z
/fz{/ps xs}bd
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
fD
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
/fD/def ld/sf/setfont ld /scf/scf2pass ld
/mT[1 0 0 -1 30 761]def
/sD 16 dict def
%%IncludeFont: Helvetica
/f44/Helvetica
:mre
/f58 f44 12 scf
/f71 f44 10 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%PostScript Hack by Mike Brors 12/7/90
/DisableNextSetRGBColor
	{
	userdict begin
	/setrgbcolor 
		{
		pop
		pop
		pop
		userdict begin
		/setrgbcolor systemdict /setrgbcolor get def
		end
		} def
	end
} bind def
/bcarray where {
	pop
	bcarray 2 {
		/da 4 ps div def
		df setfont gsave cs wi
		1 index 0 ne{exch da add exch}if grestore setcharwidth
		cs 0 0 smc da 0 smc da da smc 0 da smc c
		gray
		{ gl}
		{1 setgray}ifelse
		da 2. div dup moveto show
	}bind put
} if
%
% Used to snap to device pixels, 1/4th of the pixel in.
/stp {  % x y  pl  x y                % Snap To Pixel, pixel  (auto stroke adjust)
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} bind def

/snapmoveto { % x y  m  -             % moveto, auto stroke adjust
	stp  moveto
} bind def

/snaplineto { % x y  l  -             % lineto, auto stroke adjust
	stp lineto
} bind def
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
%%EndPageSetup
gS 0 0 552 730 rC
112 138 279 14 rC
gR
gS 107 102 289 50 rC
189 148 :M
1 G
f58 sf
0 G
.377 .038(ISA Register File Detail)J
gR
1 G
gS 0 0 552 730 rC
215 215 37 19 rF
0 G
215.5 215.5 36 18 rS
1 G
215 233 37 19 rF
0 G
215.5 233.5 36 18 rS
1 G
215 359 37 19 rF
0 G
215.5 359.5 36 18 rS
1 G
215 377 37 19 rF
0 G
215.5 377.5 36 18 rS
19 197 224.5 @c
19 197 242.5 @c
46 197.5 224 @w
127 71 269.5 @c
19 197 368.5 @c
19 197 386.5 @c
46 197.5 368 @w
127 71 413.5 @c
100 251 224.5 @c
100 251 368.5 @c
118 251 242.5 @c
118 251 386.5 @c
288 158 133 36 rC
gR
gS 283 122 143 72 rC
320 167 :M
0 G
f71 sf
(register transfer)S
288 179 :M
.528 .053(and column contention buses)J
319 191 :M
-.014(for each register)A
gR
0 G
gS 216 261 34 24 rC
gR
gS 211 225 44 60 rC
216 270 :M
f71 sf
.096(register)A
227 282 :M
.075(file)A
gR
gS 216 405 34 24 rC
gR
gS 211 369 44 60 rC
216 414 :M
f71 sf
.096(register)A
227 426 :M
.075(file)A
gR
gS 0 0 552 730 rC
4 lw
85 288 214 @w
220 70 297 @c
85 288 358 @w
220 70 441 @c
72 243 96 24 rC
gR
gS 67 207 106 60 rC
72 252 :M
f71 sf
.805 .081(update bus)J
72 264 :M
-.059(from active stations)A
gR
gS 72 279 110 12 rC
gR
gS 67 243 120 48 rC
72 288 :M
f71 sf
.012 .001(load bus to load buffer)J
gR
gS 0 0 552 730 rC
1 G
323 219 10 10 rF
0 G
323.5 219.5 9 9 rS
-1 -1 324 229 1 1 332 219 @b
323 220 -1 1 333 228 1 323 219 @a
1 G
322 236 10 10 rF
0 G
322.5 236.5 9 9 rS
-1 -1 323 246 1 1 331 236 @b
322 237 -1 1 332 245 1 322 236 @a
1 G
323 363 10 10 rF
0 G
323.5 363.5 9 9 rS
-1 -1 324 373 1 1 332 363 @b
323 364 -1 1 333 372 1 323 363 @a
1 G
324 382 10 10 rF
0 G
324.5 382.5 9 9 rS
-1 -1 325 392 1 1 333 382 @b
324 383 -1 1 334 391 1 324 382 @a
72 161 124 36 rC
gR
gS 67 125 134 72 rC
72 170 :M
f71 sf
-.018(two register files shown ;)A
72 182 :M
-.015(two registers shown per )A
72 194 :M
.052 .005(register file)J
gR
gS 0 0 552 730 rC
262 350.5 197 @w
262 368.5 197 @w
72 387 96 24 rC
gR
gS 67 351 106 60 rC
72 396 :M
f71 sf
.805 .081(update bus)J
72 408 :M
-.059(from active stations)A
gR
gS 72 423 110 12 rC
gR
gS 67 387 120 48 rC
72 432 :M
f71 sf
.012 .001(load bus to load buffer)J
gR
endp
showpage
%%Trailer
end
%%EOF
