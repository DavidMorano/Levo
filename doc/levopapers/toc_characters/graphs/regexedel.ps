%-12345X@PJL JOB
@PJL SET RESOLUTION=600
@PJL ENTER LANGUAGE = POSTSCRIPT 
%!PS-Adobe-3.0
%%Title: regexedel.eps
%%Creator: PScript5.dll Version 5.2
%%CreationDate: 9/3/2002 16:15:11
%%For: Alireza
%%BoundingBox: (atend)
%%Pages: (atend)
%%Orientation: Portrait
%%PageOrder: Special
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (LaserJet 4) (2011.110) 1
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 13 13 599 780
%%ViewingOrientation: 1 0 0 1
%%EndDefaults


%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
105000 VM?
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
statusdict begin (%%[ ProductName: ) print product print ( ]%%)= flush end
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
featurebegin{
%%BeginNonPPDFeature: JobTimeout 0
0 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/JobTimeout  4 -1 roll put setuserparams}{statusdict/setjobtimeout get exec}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginNonPPDFeature: WaitTimeout 300
300 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginFeature: *PageSize Letter

    1 dict
    dup /Policies 2 dict dup /PageSize 2 put dup /MediaType 0 put put
	setpagedevice
	2 dict
    dup /PageSize [612 792] put
    dup /ImagingBBox null put
    setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Option1 False

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Option2 False

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Resolution 600dpi

%%EndFeature
}featurecleanup
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 12.99968 780.00097 ] def 
%%EndSetup

userdict begin /ehsave save def end
%%Page: 1 1
%%PageBoundingBox: 13 13 599 780
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_WinNT_Compat 5.0 0
userdict/Pscript_WinNT_Compat 19 dict dup begin/bd{bind def}bind def/ld{load
def}bd/$x matrix def/ANSIVec[16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde
16#4/macron 16#5/breve 16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A
/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60
/grave 16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand 16#8A
/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash 16#98
/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe 16#9F
/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency 16#A5/yen 16#A6
/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB
/guillemotleft 16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron
16#B0/degree 16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute
16#B5/mu 16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf 16#BE
/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE
/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute
16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute 16#DE
/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex 16#E3
/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8/egrave 16#E9
/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave 16#ED/iacute 16#EE
/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde 16#F2/ograve 16#F3/oacute
16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9
/ugrave 16#FA/uacute 16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn
16#FF/ydieresis]def currentdict{dup type/operatortype eq{[exch]cvx def}{pop
pop}ifelse}forall/initialize{currentdict exch begin begin}bind def/terminate{
/@FL where not{pop end end}{pop}ifelse}bind def/suspend/terminate load def
/resume/initialize load def/RS{/pagesave where{pop pagesave restore}{$x matrix
invertmatrix concat}ifelse}def/SS{/pagesave save def}def/CB{pop pop pop pop}def
/B{pop pop pop pop}def/:/gsave load def/;/grestore load def/N/newpath load def
end put
%%EndResource
end reinitialize
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
%%BeginResource: procset Adobe_ErrorHandler_AI7 1.0 0
%%Title: (Adobe Illustrator (R) Version 7.0 Error Handler)
%%Version: 1.0 0
%%CreationDate: (9/30/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
/$brkpage 64 dict def $brkpage begin
/prnt {
	dup type /stringtype ne { =string cvs } if
	dup length 6 mul
	/tx exch def
	/ty 10 def
	currentpoint /toy exch def
	/tox exch def
	1 setgray newpath
	tox toy 2 sub moveto
	0 ty rlineto tx 0 rlineto
	0 ty neg rlineto
	closepath fill
	tox toy moveto 0 setgray show
} bind def
/nl {
	currentpoint exch pop lmargin exch moveto
	0 -10 rmoveto
} def
/== { /cp 0 def typeprint nl } def
/typeprint {
	dup type currentdict exch known { exec } {
		unknowntype
	} ifelse
} readonly def
/lmargin 72 def
/rmargin 72 def
/tprint {
	dup length cp add rmargin gt { nl /cp 0 def } if
	dup length cp add /cp exch def
	prnt
} readonly def
/cvsprint { =string cvs tprint () tprint } readonly def
/unknowntype {
	exch pop cvlit (??) tprint cvsprint
} readonly def
/integertype { cvsprint } readonly def
/realtype { cvsprint } readonly def
/booleantype { cvsprint } readonly def
/operatortype { (//) tprint cvsprint } readonly def
/marktype { pop (-mark-) tprint } readonly def
/dicttype { pop (-dictionary-) tprint } readonly def
/nulltype { pop (-null-) tprint } readonly def
/filetype { pop (-filestream-) tprint } readonly def
/savetype { pop (-savelevel-) tprint } readonly def
/fonttype { pop (-fontid-) tprint } readonly def
/nametype {
	dup xcheck not { (/) tprint } if cvsprint
} readonly def
/stringtype {
	dup rcheck {
		(\() tprint tprint (\) ) tprint
	} {
		pop (-string-) tprint
	} ifelse
} readonly def
/arraytype {
	dup rcheck {
		dup xcheck {
			({) tprint { typeprint } forall (}) tprint
		} {
			([) tprint { typeprint } forall (]) tprint
		} ifelse
	} {
		pop (-array-) tprint
	} ifelse
} readonly def
/packedarraytype {
	dup rcheck {
		dup xcheck {
			({) tprint { typeprint } forall (}) tprint
		} {
			([) tprint { typeprint } forall (]) tprint
		} ifelse
	} {
		pop (-packedarray-) tprint
	} ifelse
} readonly def
/courier /Courier findfont 10 scalefont def
/OLDhandleerror errordict /handleerror get def
end

/handleerror {
	systemdict begin $error begin $brkpage begin
	newerror {
		/newerror false store
		vmstatus pop pop 0 ne { grestoreall } if
		initgraphics courier setfont
		lmargin 720 moveto
		(An error occurred while processing this page.) prnt nl nl
		(Error: ) prnt errorname prnt nl
		(Command: ) prnt /command load prnt nl
		$error /ostack known {
			(Stack: ) prnt nl
			$error /ostack get aload length {==} repeat
		} if
		systemdict /showpage get exec
		/newerror true store
		end end end
	} {
		end end end
	} ifelse
}
dup 0 systemdict put
dup 4 $brkpage put
bind readonly
errordict 3 1 roll put
%%EndResource
600 72 div 600 72 div scale[1 0 0 -1 0 792] concat%!PS-Adobe-3.1 EPSF-3.0
%%Pages: (atend)
%%Title: regexedel.eps
%%Creator: Adobe Illustrator(R) 9.0
%%For: Valued Sony Customer
%%CreationDate: 9/3/2002
%%CropBox: 0.000000 0.000000 612.000000 792.000000
%%BoundingBox: 0 0 612 792 
%%HiResBoundingBox: 0.000000 0.000000 612.000000 792.000000
%%LanguageLevel: 2 
%%DocumentFonts: (atend)
%%DocumentSuppliedFonts: (atend)
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%PageOrder: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{3 index findfont dup
/FontName known{dup/FontName get/Courier eq{4 index/Courier eq}{true}ifelse
exch/DistillerFauxFont known not and}{pop pop false}ifelse{exch pop exch pop
exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch findfont
2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put copyfont
definefont pop}bind def/?str1 256 string def/?str2 256 string def/?add{1 index
type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index findfont
/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded get 1 dict
begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3 index
putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval ?str1 0
2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict dup
/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not
1 dict begin/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop
/Courier}bind}ifelse def userdict begin/$SubstituteFont 20 dict dup begin
/$used false def end def end{countdictstack array dictstack 0 get begin
userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128 string
def/$slen 0 def/$sname null def/$match false def/$fontname null def/$used
false def/$fontname null def/$italicangle 26.5 def/$findfontByEnum{dup
/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slen
getinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exch
putinterval/$match false def mark{$fontpat 0 $slen 7 add getinterval{/$match
exch def exit}$str filenameforall}stopped cleartomark/$slen 0 def $match false
ne{$match(fonts/)anchorsearch pop pop cvn/$used true def}{/Courier}ifelse}bind
def/$ROS 1 dict dup begin/Adobe 4 dict dup begin/Japan1[/Ryumin-Light
/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5/HeiseiMaruGo-W4/Jun101-Light]
def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]def/GB1[/STSong-Light
/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def end def end def
/$cmapname null def/$buildfontname{length $str 1 index(-)putinterval 1 add
$str 1 index $cmapname $fontpat cvs putinterval $cmapname length add $str exch
0 exch getinterval cvn/$used true def}bind def/$findfontByROS{/$fontname exch
def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}ifelse
}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1 index
/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}ifelse
exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall{$str
cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup/WidthsOnly
known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get dup/Registry
get Registry eq exch/Ordering get Ordering eq and and{exch restore exch pop
true exit}{pop restore}ifelse}$str/CIDFont resourceforall{$buildfontname}{
$fontname $findfontByEnum}ifelse}ifelse}bind def end end currentdict/$error
known currentdict/languagelevel known and dup{pop $error/SubstituteFont known}
if dup{$error}{Adobe_CoolType_Core}ifelse begin{/SubstituteFont/CMap/Category
resourcestatus{pop pop{$SubstituteFont begin dup length $slen gt $sname null
ne or $slen 0 gt and{$sname null eq{dup $str cvs dup length $slen sub $slen
getinterval cvn}{$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname
exch def/CMap findresource/CIDSystemInfo get{def}forall $findfontByROS}{pop
$findfontByEnum}ifelse}{//SubstituteFont exec}ifelse/$slen 0 def end}}{{
$SubstituteFont begin dup length $slen gt $sname null ne or $slen 0 gt and{
$findfontByEnum}{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{
/findfont{$SubstituteFont begin dup systemfindfont $slen 0 gt $sname null ne 3
index length $slen gt or and{dup/FontName get dup/Courier eq exch 3 index ne
and{pop $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq
{pop pop}{def}ifelse}forall $fontname currentdict end definefont}{exch pop}
ifelse}{exch pop}ifelse end}bind def}ifelse end end}if end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -792 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 792 ln
612 792 ln
612 0 ln
clp
11 dict begin
/FontName /Helvetica def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 230 dict dup begin
/.notdef 
<10bf317079bb21e4> ND 
/space 
<10bf317079c7734bf7> ND 
/exclam 
<10bf31701f696e39a691c64d4ea58f202c341570e592e108ff555f87b47c
ebce> ND 
/quotedbl 
<10bf317022fe4fc7e2076ed016bef5a7cd64cd9d96d983388a59073aeb73
17d0cecc707d> ND 
/numbersign 
<10bf3170560f9ea7e1a796f19e20d5304cf3d0a899acd6b87499df710b79
2b76df0e87dd0721cd9c0555b9abe6fd7b6afc45f2ac5bccdb3c82e20f6b
1f809d895e84b3ea75b15f2da26af46c533f1c877b46d999dd7954178b28
76304fb4aeeca2344550bd327bdb7b086307e301bc280ee6a95c08> ND 
/dollar 
<10bf3170383eecc69479a49e819371970b70d4b19b43755274412dd1b801
fae80355129d9feb5794719c19633d8433a12fd95cdc544e2cda1307f3ab
6bfb3aa89fd27cf593b66ed835c1705cb0d2711634cc868fd93a2a3b3ad3
f0ae8de4babc9da6b3f15ca3d83d660c072e4ad0640c6134747d7ae096c6
9b033724462928e054025c6f2a4f11fdcb> ND 
/percent 
<10bf31704c1dadd8f7ec26289556283e0e0989c9f2fc8592b0a73382ea16
8c66f6430f9eff90d87ff68a77f7ec060f0e5718a5df146e54080086c5c4
30fe04e6d35c520b77a28847bd4169c1adabeaef304b7437dd613701e316
308bc3cda3b37e5cdd91406158af0b5f60c192cf55604267f98b152587e2
314dca4e847b4f299a0e4bacb96abb139545406129cdd648eda5e6> ND 
/ampersand 
<10bf31703e64414d52139019de7da0e26b5a5d5fb5d7bb93a1ecc8e58086
0553da0d2d7e98b4f6d7052c0a6a0c55cacbd6bd60aa1df82c50183396b9
a21c68b63c51c21cdaa60944361c93d5ea141aa1977bf865c558560f179c
a12fe942298fd6a695ef186a2509bf218fb34fed59e53dd8c876d2d70c53
5073ff80b78917495491844008d56e949d34d1523f86b24f2107a109114e
2be82c23c906b095a571a3d58a6f> ND 
/quoteright 
<10bf31703cf7b0fffba761598487919a39b2b4a113> ND 
/parenleft 
<10bf31701a61adf3e2604333c135913dc3c05542b5c0cb573c63ae20564e
d493e9ed6ba94c2577d77fa3ea7a916902daba77e5d888b09e1ffd8587ef
6896422b3ed79e8c8e2662f7c01ab0f5> ND 
/parenright 
<10bf317054ad71391d20880e7d4b55e2d82fb238cf6664c04ea5d16353d7
f85f0565a49234903fd4253d99e3ee689ded6987929318b16331b6897572
65a8ecb40b8e9ded3c720f64e3e88b> ND 
/asterisk 
<10bf317035a3d4ab6e3c118d332444a4a7497453eb58d3dcd1e1e02557f6
4f9f76f9b6dd3eff0cd61cf38d8768aef0f635cdef91751abd2d3ea83489
e040f6b13354a045e77646888d6958df319747882df887ca099c66a02590
> ND 
/plus 
<10bf31702956a64838ec6ea54ea5a625040dbaf59e2927270a60249fa69a
0de00dbad01698bfad0e887abff222> ND 
/comma 
<10bf3170209b05e3b3248a89ee470704d658845e> ND 
/hyphen 
<10bf31703a9458c05d9915a8c5c3689f435642f1> ND 
/period 
<10bf317003fd9db7532afc2e623e2278d1bf7f> ND 
/slash 
<10bf317061212edc089c8cc0062795d04c99918b4b9df229> ND 
/zero 
<10bf317040c2af124ea0a49a7bf41805b177f7c4208c932584e43c9a0bae
7a5e09aeeba03bdb3baaad65f0cfeefbf4dfea480c85f107e431a3019391
4313291eb8234a5c6b4c6242500b667415> ND 
/one 
<10bf31702ce19e53b6f609b518076fe6c6a8d5cacbe441b89e80257f3d1f
645b> ND 
/two 
<10bf31703a9b9e75ea81f4b86404c8c5b0ed48d346c9f9e1e6722a5907cf
5eb758c85cae665702f340820b73ace5e11f7e6546083389554dbb23251d
c842d74279d70cbe6fec8d3905d4e2> ND 
/three 
<10bf31703e65fd7e38478bb8cdc815f391da1d8e98fb667ae1de5387b9e2
5adf16a18c21547c5b7e4a4d3bb688955858c2a2587f884949e50417a4ed
da8e91b48b3d6aefaa61a288b6b8877c330f52739b732112e18c9e258477
a11af5a92cb3ed0ed0b61758427ed7a13137d28d15> ND 
/four 
<10bf317031d92f340665f9d57abf5ced546b77824781b603d888989411b4
cf09c8b71519972084b8ba5252f3ba85349db148c917e4da3ebffc407235
b686a99bfe4fa711d32821> ND 
/five 
<10bf31703a9b9e75bb2e0c70578b80ef68b77db429dab9d081841e1cae7e
43a7ad1edd665660b80f010c71f0d41d1d4f59f9c78880d1ab7224aece9b
55b74a84b8d91e5db90111cd94a72bf01c561d00ea7f03613531aae2ceeb
7dd3c092ee8ac48d> ND 
/six 
<10bf317031d92f3425eda9786fee0115802f83ee2bdc48b38e5dc519e6e7
fcad714d51b19858337811ec32fd29f20816e9ac9e4689dee95b55091ed6
d175233967398c6c26f22f5ed8fba118a39acbb68509d779f8381b4b35b2
b8d33fdb68a6fcb48c7dd354ca778ab6177287c88c> ND 
/seven 
<10bf31702094ca827fc76420990176631236589de178083fc51bf8d25e7d
a6ecb061117fad427b> ND 
/eight 
<10bf317030abfd546f6a25effea3482ac10c6ae2fe327975514eb9482239
6b32f3a53e0c43647a8718fbc7931f8bcad327cf335ca1ac4652890450fa
a5cb572b506aa248a1ac56ae84f18f09a6901bd92dd2ae079fa5efca0a8b
4eccc29478085e0a82cfa4e25e877e03bc1e3ea8064bbcf3bed973b18cf4
cd9eb2c17919eac825a1> ND 
/nine 
<10bf31703208c2e221b517a5186f3dd55a80efc0b91f8339bf8e009d3bb8
1071cd4106b22a21b246efd012fcd07b5d465251bb5be2503225d25c72e0
eb1d2831cfad05be9699035447bcf343715c7e7dbefb643acefd4726f52c
7896554bff21ffda94dd5a4e395032349a14> ND 
/colon 
<10bf317003fd9db758b35f4087426c31033f156cbca468f5fba1ef3f0bb3
224f> ND 
/semicolon 
<10bf3170209b05e33f6f3b83d74e8696ae226b4fce774c5d88886df8cb23
d99c37> ND 
/less 
<10bf3170258c47474f73fae2c2f185ff6296184b966b49ed62930803e28a
dda5517b2481a8f9009b> ND 
/equal 
<10bf31702956a64838b97d848f1450947466873eb67b7e28dda63cdfd83c
0f5405> ND 
/greater 
<10bf31701b9ca626fc360638d1fed7be3d9c14fd97710d630c68ed69e469
71f201fec077a5b57b76de2c95> ND 
/question 
<10bf317069b1b5630e04c112024c6e5625594a4046d765539862c028d1f1
57e49b5d6370007f85407958043f056f55651d4116fc0965f95d42e20b95
422771cc762a2794e6fffdd6cd015ff47c853039e0716a9f7d> ND 
/at 
<10bf31702f7ed241d246f7b3746e47e4d16cf12c0942c3de5912461e1730
fd7aea9e8793bef3b3d9e5f537c0e9807339bae2af83eb1f058ff03f1c4f
c7e17081c7062df4735b6cb64cb0f63ebf02bbee676c090859a3b3acde4b
718c0ec5a0aacc4bdcefbf272d4a1de4fd69312af4742ec9df97feff085b
eb1b139df0b6d08d8e25147dce738268827fdf427e48ac330407aacfb26d
f18cb0791d4eba5cc8a93ddc1549107166acc93a60dec587c2a5ddcc6d23
c19249071bfb9af2ceed9f11f75675645f055a2c88966fca23cbd043044b
43239731cfe1e0e86d614c3121b938813973b2ceba3dfe13e2df355c0c3b
> ND 
/A 
<10bf31706c4d8e6db23e4e7dd10421235347a91667751ec88a49b1a910ce
a3972bd463d970330f6c30025edba37a6883171fe559abd5987dd70f651f
5c2d1df12b2448> ND 
/B 
<10bf31701800cf60f8a61cd3cdfb7303eaf1f9b84caf07da32db930c1cd3
bc8db90b05ea0ce3064a8253659cb3481c413674774287ec5067219c4e4f
d5dc7e380e6dd3f7bd106df1a7b2c641c29681728b960df48ef68e26986a
24a4556f171fdee47bf2052c814abf2aa0> ND 
/C 
<10bf317030aa083cc281922089bc4995e1d4572913eea9642c0ded1ef72d
10242c68b6224c2d5e4676e75be9080eeedaa4ec8970a733d19c126c5509
b1f03ac9dc70569cf0c9cfd7084211a7c7cdca72c9cebd928fdaa4afc8ee
e852293ecca142bce8> ND 
/D 
<10bf31701f6741bb47fe3e7de2a0538140e07e17d3b9232384e78c50d21d
59657b66e3797826e2b970d8f6e9c735d33b704c5cd3b4fb243e2c5b7125
c279deb24e2e7213> ND 
/E 
<10bf317005a58e2868ec80f87b86200583708f825d6b2c1c1312977a2aa0
9136ca794a38c61a48ea76846c0f02d850d7a99e> ND 
/F 
<10bf31700195d17855e7a7f0c8d12288564a8c42013bae1dfd176a436806
2a59f2d7492ab87e> ND 
/G 
<10bf317035a2615cb512b1acd8c36b3999c46a1a8ef81884beff421ad200
0e085ca389b263e2a4ef6c5222fb074fbb0998d05f05e30c116dad7b145e
f864741add4f4b1bf74765b7d62c4debeb211ab4db13a2caee4e3bed6659
677cbaf1624ca0> ND 
/H 
<10bf31701574fcfa9e0342a119dd2a9b3763245a86e8730354b783c71f27
e31bdfb7f25bad836884799c6c63f3995b> ND 
/I 
<10bf31701cc58ec4eaeacb3bc4195efad539b543> ND 
/J 
<10bf31706ae07dd133a00ec1babac7aa14afb668bc63840254596a89f506
e0b7558c967fa60e52e5e6eb925b220414a0e8b91c12ca> ND 
/K 
<10bf3170068cc72b1895064fe26514ad83b739ad15361c588ecfe23c0263
3f4cf86c705363968ad2d0f2a954ff37460c190ae9f051dc4ec8f1475b1d
190ce4408d4b1b0c8e15f607> ND 
/L 
<10bf317018016f937cb45f763f648fe32fdca0eb86c44df4b27f1023da82
> ND 
/M 
<10bf3170245f62a324778cef37e4da0bc5c657ee7925ceb3647d3feed128
d7f9eaad62f027ad444c23b74b4c8d5100edf19b47f1ecdbc1d9ef622ae4
1d03978fbd2fbad879043856183ad4f355fb7413c0504f4d233007224617
a8ccfddbaa72f272b199ecc3> ND 
/N 
<10bf31701b9d2e0e7516eb9f7e36ab2c9f286bc6ac55b70aecb4e623a9ed
ff9ae0784b29748dabe3ec4b964041c792911b33f48054ca470773314ba9
6fc406b45d076568faa05750d9e719b0f2> ND 
/O 
<10bf317030aaf049524d21ad861a987ee999b27e859757341083a7d62165
84def687023ea6f365961d603c57297ecb5ac220139a98e0c37c2e9085b7
e78a0119634b83755c045d72a5f3c79c12f5fd066f2634bba7c83cfd4c06
ac> ND 
/P 
<10bf31701e36255aa36a4abed91a52afc36d1129a5bda8efeba4b7ae3645
26f0e773fdfe6c9ccd043a1905b1df6f3725e8a2c7e8aa6fc2675a717d28
8037afb9ba58138f2dc53a> ND 
/Q 
<10bf317030aaf0495d253d73ef3867816f45c0df51feaba92ab4d8034a3e
4c37d55d7239b394c49ce09b435c74335ac23fdbb09e1ff742464cc5c5f5
52c5f8e87de1cd9f734a201138dfce81559f472acb15876f1a295eb283cd
520b9418c15922e5bc17bf64baa8eb2b> ND 
/R 
<10bf317007bafcd36d9067ea43f338836a69b10b1cf0aaea1947f9a0e7a7
1d10ec8b1050df433915ee2cd0ed69c86d9dbf18a60de38b7656e76e7197
38103033e6936b1b36e99f93d2e5855da52c0300> ND 
/S 
<10bf317033474622541600cc2acc0f9a1a21d860dd13cae6b2a2e0d1db84
bf8c11b9c8200d539d5d6df9ad95df75cbb91cee52542ba8b2e89d06d385
5f6188883ac9bbacd5c45a12eb260272e8b0d364a7ad65265e472633926f
e938aace9a388efe95d9c448e82e19b19326f278fd880ec47df55e79c728
96119b424b1d449136811125c288f0b6f349b2005c3d5c6d67a814fb6c91
c855aa47d559fb4ea193> ND 
/T 
<10bf31705b0718f4080b10c3cb2924b3e39e7da6f0d9a10e44eb594c23b9
573474abc960> ND 
/U 
<10bf31701b9d2e0e75dc1c6f9b5aea056774505faca68af8aefb14d9b5e0
5605fbd4781069b577e1ba89f56e46ef8235b3d328a5286b1ddf1698628a
08e4fd46e0> ND 
/V 
<10bf3170573f824b12583a5c22b8f9dfe20065e831d5da166a512eb722d5
028f1679c64c43c669716c5d9a6beb31a1882e0959cd84893d98> ND 
/W 
<10bf317052475801b60e9d75fb2150e0dd9f3ccba696ef9f88def1a147f9
75b89dde3cd28a90764bc744b77341d07b3d05f95d35e27a61543615ebc9
aaaa053c8b8c9e1fceb9ed1e240313066750625a172700bd83a1a6222fc3
235bec7c214a964dc701e0a924e35e6fc435900791a9c79a> ND 
/X 
<10bf31704be13e42e276a1dbc2c1535ef5a46b9af140ee2d40426cdc7d94
8f5db80aba1409c400fe593c7f6dc9021a4effa5d6c3df2dd7b6af7da85c
7b12> ND 
/Y 
<10bf3170560ebfa11226575da471fe119ba848cb433c8b0739f1da690ace
19e0e58aee8178eaae5dcdd2bab4b4e420e9b227cf9d0b043315cd96> ND 
/Z 
<10bf3170396d5b7827c6a1ed61267ddf85a525af020a6ea9d73072419ede
972940aba4047066f47c7cbe72> ND 
/bracketleft 
<10bf317010725340705c81366dc59cfe75339677b17467ea7b8f31222ea7
0392d8a535> ND 
/backslash 
<10bf317060f07effe900f1c179dce3004c06b63f1546c53059> ND 
/bracketright 
<10bf317054ad3ad6de103c2ea88e777d00f406b35a3644a935855fc1149d
d299> ND 
/asciicircum 
<10bf317030ab5419e227add0fe031d3aaea49c4a4b7de7c40abf1f77c134
393e51d19f580136> ND 
/underscore 
<10bf317079c8673e857385c9168da3a2dd725e50bec9> ND 
/quoteleft 
<10bf31704bef29dfac8b7cf5312c505cc54f3d8d952946> ND 
/a 
<10bf31704ab2503030c021d3d8028b7bc4bfbdda0b384d37165e7edc7224
c6b7284f4de3fb2230c3519ca1dfdf0794ae73a56195e366ee517aea1bc7
15d8e71ca6dea10d350cb831aea6bd036571313dd703ee062740a71fb36d
413e17368e48b3738eaaf8619a516df6c4ecb0dcbd3677f8c5bf8c42f568
> ND 
/b 
<10bf31702094ca820c254a78deec33d46bcefb3b88be60ae4a539cc46302
cfc62a03dc640b42f99a02da9a79950b22a9d589cc8ecdf47aad59a18d38
3898e7a208643c25aa7851246ceab7df87683faba6ff9c36a6d19892b70b
8f6e52f6> ND 
/c 
<10bf317041f0a949233299062f20927d17046b803a3239107f5fc5937643
6d193872a9c41376664ee1d53646aab55191f7f22c2d93139e9b3f1f9218
d273604ce5dbbf3c0707849e2a0760> ND 
/d 
<10bf317047276c4999a66a7f91a435f5a2bcb493402c2f337c6cef41543c
564d2b6989b1943e8fd4c28f55b8e5efc85e71de1caae3a017bed9fc6b70
afba1bfd24a27b96bb7a1facf3da7bfe50e6a042548913a52e71105f7526
30b5196211a132> ND 
/e 
<10bf31704ab2503030fec2f45e7e5cf47e903e674aa3389f3620374e8c9e
d34a92ac68abe08c5fb790c6003e9d3a6d07d3d1b09583c781dacd978778
0fb9acba71e6fcfe215aa4800c46f320f947c16c522a6b6cd76318c56f25
e3703c6a5c41576b7f6c890695b9841c9ec2> ND 
/f 
<10bf31706fd71d386b83230daddba58a9e6370f44bacd52b1729701425a3
043058b817c8fb50597ee8d81edc0a37a40b7e19b23074ce2d363afa5ee9
6552508937dc332c9dd4e8b3c28e57028b5f6b663be18248199b1c2918b8
051d7d1a830acbce6746> ND 
/g 
<10bf317047276c4999ab487309fd1a934c068fa8af93867c98fe2d791dea
e75259b1e709a7ce38728505faa76990beaded72f11574996fac422e82f5
6f6057af7c3e4840b1ccd340c40278761c266866a20aca3639945f430d13
634443257acf715db94183f924848b87aa596fa1f720fd40ff93a60d567e
e42b466a25baf45564f62c125ec9f5adb5934a5579d10dd2748d53617e66
98549c> ND 
/h 
<10bf31702094ca827fd8441c0957d83eccde8fe7a19fdec1dee56880a8ac
6704f60fb746f4455bf7692c80e4dd6f72689fe1dfcf08b95d9d27b629c9
6be320675c7f0d22ac1909addc91e4d24f538497c3a125f2290f2e33a5c0
34095c76> ND 
/i 
<10bf317027e610bfa7f58864b8a844d638cba10895c23a50649476cd3513
20433660> ND 
/j 
<10bf317009da6a99577db5f63a83c001a21d18a86bd90b3c8df3073d7f9b
242d2d27cd27bd98e32434aa6b2a2cc8a91b030aea191d74da9bc97e84da
93511f704fdc01f9217754313026916ed58dadd892e89b70cd443159fb99
873295dece> ND 
/k 
<10bf317021c303a337e2eaa8abce409a51a9dbe879aca2ffd887b742bda5
8a35cb0b67786189f6b4f77be01610c451b99d0e69aec844ea1b78ab382c
d54fe0e8d84a6cda> ND 
/l 
<10bf317027e610bfa71a148f1972e3967a34832e55> ND 
/m 
<10bf317021c2695e9c7fa6f82eed1619e9e5c441345edc34908a1558c814
d098cad2a350950c603d48fbbf1dd3892ba3a7a0f1377b46e09ac5cade6a
435db726ce747dab69cfed4ab554ba84052e66fc7e07266c9817537d65bf
f31b24021df986002b731bd41bbf2101ea82a479977265b6a16dfde920b0
69054a15036b7d78794b70c9c5ec866aa5647a925c21749bf38329c50848
b6eafd5abbaf882d0f9ce6> ND 
/n 
<10bf31702094ca827fd8441c0957d83eccde8fe7a19fdec1dee56880a8ac
6704f60fb746f4455bf7692c8e2a462cae77a324bebf77f6593a284862ac
3209d1bde2c95ed48bfa234b785a19fdf4f1e4d8ae442c7831e943019755
81a7f3> ND 
/o 
<10bf317047276c4999ccbb3f4b024eb7723deb0824e8e82581c5ac58a4ab
959608a2d991f31ccafef4241c1038db31d0c5d44a55b86ae3937f5c626d
032a9801116b15e6f019245a8312dd1434dd03dd8a36d2> ND 
/p 
<10bf31702094ca827c0b31e3f26978ae02e7e4c0f36b1b5615f1b414c499
e50702ddb3372392561dbc0afed06ab340321cb8e542cca7fb5de8c74274
84ef63ea77040d0ffc2ec6456db0d6620e2f71662e8de73a841e0dcca864
520ce883be8257aa7e4646d5fe5fcf79a1791bef781a08056563e345c07f
3b8fe8074841eeff0d29dd36d0eabe46db8114db4f295182> ND 
/q 
<10bf317047276c4999ef7e1a1feb52e10ffe5a256a62e822ab114c17c552
8d5b3825015679460af12d2065b304d33aabfcebee4cf2ec2aae658e58b3
c8ad0ecfc59502992d41615865cb3066e26fea926abbe485ed526da982c1
7fb4b5f9cac905428e1d2bdd6907a52c1dceb44604b374393f4503ebce71
6803a03a9bcf61bc22c023984c0f08b8ddcc6a6061419f0deb48> ND 
/r 
<10bf317036de1a736fd7044d328eb56610489f58e06f422d5d8826e2d999
7d6965f0a38f44df78838b515ec5a86a6bf241c7e5d8a53c76fc22a6c180
d13dff057f646f7b5e7a09debb018bdbfc164820868991cbf59f> ND 
/s 
<10bf317040c2e74a50db8320b72aa362422c5046ff900196ab3f5f434a4a
ef605ac2e8787b3b2c0a32f8140a7caf48f682c792596170e829a74eeab9
e6b13e5172982e4c3aa3bd41b0f2649cd6fc7558007ffe3d8b95c3a53b15
d60552dc9d8b58f17081fcda3d7441e8da35b81ca90071d9a58c33330a6c
c65f543fd95a38eac5bb470b69332ac4e09a31d6ff0c3c6f7132ba18b413
e71f969364b63412c18b670d7baef70c500eb778e76e> ND 
/t 
<10bf317065f8e1c4514de29c8c0648dd97151e5185bd64bac354fa8d1cf3
e4893266bd83dbe34f939afaa43e5bf292e9ec5becbbcf7880761e8a4389
bd1570f56ff019190df8> ND 
/u 
<10bf31703f932f5ed018c596aaa8f7609375f318f4ecbec66e97863e3512
ff20661d34a4e877adb4c4b5c4a6d91847b1377efecd3a8443467ed2398e
c773d19d50f0765c1a8c0f3f7a31fd382b41fddd16b9df52d173511bb8dd
7c> ND 
/v 
<10bf317069b1fd714631eca10c760070117668a0c05e5b38c7d861f456c0
e3dd6317ac8060fdad17b6a854b5db0fcf934a34a5a2> ND 
/w 
<10bf31706b1f8951bc4c61a7ed00f01400be642fae759c632366acfa40cf
9a410c6d2d36de0a827c3b7e941220825b1d06c05654952366d19bcce108
70e580b9e1dfd5c66b11a1fda1ae6903670eac8534afd7c5122ccd336da2
ea61e41496f76ef6968319efabd872> ND 
/x 
<10bf31705e925b80bb702a983dd577e183e8a6df5f7c303f38a86a305a10
87fb49523b5836913590fe8bcf09908d77054b06a8dac06f839472d764e6
dfc6273f4f18942b5615b2ea29447c16> ND 
/y 
<10bf3170789a7df8aefa30c3938f228b6b52130014271654504f35238741
a244043537fe890efa6389032d5a401fa6e2966e86999b879839803ea716
e946819819ecb365bc221200103f4a35d4583ace0d158a40057484793585
990bda1661163ff61d7709d6c92810ca8ead63d8> ND 
/z 
<10bf31704ab218185f94615d219391c6102bb84a292d20406ae334338215
476329e7dca9973db7d91cd833d1cf> ND 
/braceleft 
<10bf31704c10c62b7757bf52d1fe9ec102fdadd5091b1520a3a11e69e80b
223909b47bc28f904fa740e10f2c1edb2cb37dd4fdf184f73e790da3a6aa
bc4895e8d0565b4c682036e18f083456551c1e30efaaf7d443bf8216f77b
69dd0e3df5ed54facd0e0050f9a2b984bd7a2f1d06875c46a2fcbdf16148
79515f875997a78dee697593f96bf1566e7a55f4130a5d83cb33> ND 
/bar 
<10bf3170019ab6be1a3a522cce3aac1f3384cc9a> ND 
/braceright 
<10bf31705995d8f5cc465711974b6d19dc74aac46e028b4afe91dcff69c4
1b5424d905bc0028bcf4c5b2d6c976cf2a15cc9267b72b158c1a12aa9ea5
dceadc8624885f39c48aedfa1320093d3e60a462ba01ce2625198c02ea76
2dab6d59d5982af43dc3182ffe17b247a1442ffd02d01ce265acc1ddbc34
e330055fa7b99f9bc37fd7db6b893826f6393cf2a07d935a84b382c8b626
> ND 
/asciitilde 
<10bf31702094d631c0a2cd76e28be778ece51c7f8213e3e6b44eb4444098
a6a6a60fe17227df654398d9c84b908c9bc142e00f803abdbdf43abd864b
b0e54d7de10fc5a8c0cc7079e32c96528797b4> ND 
/exclamdown 
<10bf317005b70d3f6a95ffe3e02fc29018724cb7f43b4e8c978b2ef88c95
37584337afa8> ND 
/cent 
<10bf31703a9b9e75e5377aa5bafd4b6cd01c1c61eb6a764dc2f35ef97e66
57852cf510bcea897f1f647d6078b07b05034f7a3e70d8bde3756c2dd2b2
63a1a8f51796075768f37f4eaa9a8ed6443b19bf1b6fe02a688cda0b64c7
09815bc31d6a50757c1198b3d2> ND 
/sterling 
<10bf3170396d6c2639ca944fab5a58ee7af252e0f65cdd034c82f09ffeec
baa9b13f5d6b5793ffd2f64b1d41494e40877d87c712f51a1873b8916f73
34b422d97375fd9fdc7e5679212521e8a0ec01639710f98b0c2531bf7587
534b9682c1709a75ee96b589179ef4d8b352a23933a2c95a46714f608db7
835cf6c553239ec8cbf6ca10f2cdfc4ae1ab4e456e8ccd06a4f4fca8d50f
6a> ND 
/fraction 
<10bf317079bb21e4> ND 
/yen 
<10bf31703208c2e22eadb3c3f1dc778dc269d0b1305920f3754275fa20dd
456a43c95641f606b27d3fdfc989f827e07b4d113d7ed15f9d1acbf7f55f
a347997757fa668cf15774d5b3b0c41eae635be4b4f920905b48feb3a8f2
575d2bd352a68d61f0c4d8955c4f28236ea9> ND 
/florin 
<10bf3170bf5aed8c26182ef0b3220f39e70a48bbc506d44290ffc4e7d248
e0347a3f2740a927a4349138d1f7d73a56d9341b26026c48ea501c7407fc
7fed6e9caa14f0155c8d1c75019d2a99f1a88ba04647f3a018d461ce0473
63b5376c35027cd36b6b280ab259790fa525c2b9eeb724ed49615675204a
d979a423850676e719eee88b> ND 
/section 
<10bf31703cf8502932e2e6db2f8dbbe03b3806f8e7e1944dc81e1ba85329
bd4fff85b157e82d04ee031b7645500af3f733eeac407c0c90fc806e4db3
e158545207e07cb9fd7c2bbbabe630c297104a9b8001f7e04711c57bffeb
1a2d7468893e5ea4483706064b983202dace89adfd62614a0722cc107baa
08e7df439ba7b8b7397791793079cb954595ddb0d15d1c3826fb51726243
7b3a55d6124a5c015c5f1e23512436e255cf42b5c9e1dfe3f7c656eebb76
a046077a9e9968138716f883c0bb1f5a4710cff89898bb> ND 
/currency 
<10bf31702bb36c1f27341dcabe0a04efd03d96301a901c66192f2b10770d
637c22fa4dd76af5a8fba0b63bf8b50f743c8c209bc2fe658df6bbd6f45a
afb625fa81f46ced2437518e187a9e28ca2ace06d80a6851ab86f9e671fd
c44d2a7f76409a542261e8f7102c5b55e413ff379a41ca7e7e1d94e7e530
b42bbd57325499cd4040965e3fe85e> ND 
/quotesingle 
<10bf317035ac5c5c2b719e06933a4f33e94269c2fc54bc9a> ND 
/quotedblleft 
<10bf31705d6b27d18183b1212b7962f8b4559c2a5ae116b2e3dd95467228
90d304917eb507> ND 
/guillemotleft 
<10bf31703d367cd547a9821971777039c399a70a2fcb7f86609c42b04a22
9e7ee4a8cb7e6c1a81f850b88be7df058dc4d0be3829b956d38351b16d01
129ca491dd> ND 
/guilsinglleft 
<10bf31703bc537f1a116d360b364eabd8ba70e8779d2e6b7e8777fdf9fa4
c1034a6936b862daec98> ND 
/guilsinglright 
<10bf31702bbc0f8fddb11035ac04db2e4813f2645142663a5ed10524ce53
db7806450d860bd8e7d5f3834672> ND 
/fi 
<10bf317079bb21e4> ND 
/fl 
<10bf317079bb21e4> ND 
/endash 
<10bf317054a2726d52144f05812d9cc81ae50572> ND 
/dagger 
<10bf3170193f87966b3a8b682d0dd976259a704df039e675272c14b1bc1d
e2c5565a324534ea70048678ab6d272f3a492092ea28a53699dc51e9fa4a
82582a6d38c26798013190e7e28c23d265> ND 
/daggerdbl 
<10bf3170193f87966b3a849055dcfd807a4e8989989b3feb467ad2a9fc49
ba363a290b0499f006b8fd02b1a699e00ab85cf0af9208c46f8bd1fd4d2b
1f084e26f327e1206d211c1f3a788e0e05a55a76b1317ad7915f09eef198
32468674e32e055472922dcc11> ND 
/periodcentered 
<10bf31700069bbfd3a7a3fe2a8d5f3be6594d78f199c4bc3da6ab1281380
8f5b54246f3c> ND 
/paragraph 
<10bf31705e927ecb2d09bd40b3ff8a0fff14daa5a54b4f8133fb5f8f9e87
9b1b7659bef0b8cf31758046f78b136e98d97fba0213036f5f0434173e8e
2992> ND 
/bullet 
<10bf31702320a2007a3db7ab5f1f030c679d264c4c8bd8f19022fbeabc12
333da92eaadca2419dd9> ND 
/quotesinglbase 
<10bf31703d395a3083a309a601a5051583efc674> ND 
/quotedblbase 
<10bf31703349e73b426af524d4c92c86e5400391899187e290f0863551a4
05133190> ND 
/quotedblright 
<10bf31703349e73b9266439d0f0879be9e7fc4882101ed4e75f4422a08a0
c5cec97b99> ND 
/guillemotright 
<10bf3170107d185084f5f1481b36771a176a65a9d431675b023cf0a568ce
dbc0ebbf0ce8c52e1e3e8c34b9bdd8fd5ad68963a9d0797bf7bef230af0b
800e3a0339cbef2e81176b1d> ND 
/ellipsis 
<10bf317005b0af3a6146a117892077fd3e997260043bdb1a1a6915d49ea8
7e66eba4139c6878e7b2> ND 
/perthousand 
<10bf31705e904aae57fe1116dd13ff8f3642c1c86262b3457d74837e0a3e
bd5d22f407f3afbd244bcb8c36370306a7e30eeabc7c278dcb5edb3d89b5
0d088e9a650ba8af71a52ab337f9c07da60c0541db48fd0b1f07b5a40f87
12de185ba785ac21c3a7ce1ad4d167cad9035ea7b0a0c82684ae0af7dc7b
fd3b7a0c6f0a41b005c18a446e37b39996463691c1da7eff4f1b1e149e74
db7873185fc426c8da83d11b48bff6e739640bc57645af6ebe822bd8ef1e
cdd012a0811825e6dbf823496697c9d484f51ca396204a3192bcf7d7fa> ND 
/questiondown 
<10bf3170560fa98477cc8888ea7c9c6d4874dfc8dcdc4abff82169d535aa
1f2b1079cddfe40305ea09d7fa04011fcf8dcb80558ccd718f830da3844c
5c40ef3339cbcec051a44e74823a7f2baf94d4d55f76caad57ad> ND 
/grave 
<10bf317054ad713941a324f16377b1ae1f954a4961d3> ND 
/acute 
<10bf317005b83e1a515ed6e40f10fab2807a4e111081a3> ND 
/circumflex 
<10bf317030a479bd0c0cbb3c8ac9d42570bf94f3b677ae37a0687d82460c
86cf45> ND 
/tilde 
<10bf31703349e73bc0f0b961f6d5d0dd4a627ea967e88f47cac6d44d9b66
40a36735614957f0620202220c95fb455800369b4ec859cad7017a74a4da
94b9162e615b348d150e5e00ea05e982a00502> ND 
/macron 
<10bf317039622ce06add0d7603cdc934952d15c163> ND 
/breve 
<10bf317079bb21e4> ND 
/dotaccent 
<10bf317079bb21e4> ND 
/dieresis 
<10bf31703bc537f19a7efbfc5fdc060e060576b8fb7aea77a13b9f2304> ND 
/ring 
<10bf317005ad12fad86683d86b4d9db2229bffeed20a4ffe2d598d72aa82
c6aae3b980884ecef5d319082e56ad605fd77c21131f776e58a44ab78174
4a65688f> ND 
/cedilla 
<10bf31702e416eaf4da7eaf44de1ed530019892de34c59e25d9529c6e5c3
d9285f101684bf977746069041478003f04b8436d58e25c4946d6e95972d
e4ecf878> ND 
/hungarumlaut 
<10bf317079bb21e4> ND 
/ogonek 
<10bf317079bb21e4> ND 
/caron 
<10bf317079bb21e4> ND 
/emdash 
<10bf317051154cf7e3236008c3b2dd0b5cd8363c43> ND 
/AE 
<10bf31708ee5c8eecfd9df730773c0f431cd9c2d7c92d285ad7257ceef8c
0203a8c0af044c738316503d4a3deca3b40419406d5a762a444ecc87ccd8
3732ae8da031d1ec0263aed9f042416e2c4364fb3bd61b234ff5774d12bd
04e6> ND 
/ordfeminine 
<10bf31704be04481b43975b6bb8f3f530cf405a53ec6155d4ec80620d251
fd99079f4b952810c3f645c89b4a1c60d052acd378ebde0b4dc9f345fb6c
4b9dfea97c5e8e6b29a31297b3e6db05795f91446dc627015b1e7830c3cd
8be9b98f462064525d7fee3152cb33215d72ab2db27d78> ND 
/Lslash 
<10bf317079bb21e4> ND 
/Oslash 
<10bf317041f16e46e018e7e5351890e8b4b201265a72a6d17cd18f950cfb
3c244c8e61addc50be7325c8ebaac735d6ca14c1e18d7fa7ed263755b6df
ebedfe2b5354e90a67f4e56f83d1935010e37852f5d54cda4a413d92eef9
6e9d793c64b476445bd430fd1b4f835b4cccca7bac61d9c9e59d95ad609c
cf431083420280cfae636b9c7259664504fb287b784e186eb7884f29625f
545ff7> ND 
/OE 
<10bf3170320ae3cdb27a4e62ab2f79c3bc170b07fcc92e63a3f9ab3c73a8
e79c68cd753b824afc28fce1f0081ae39fb6bb988f219d49f58bb2a4d058
8d6b3df7d8ba1c0e779bec9e332240d9f5a39e736cefa07e82c0a1a39269
e418d7627b0e55beffb28f21d1a97eeaddfeabf6e5> ND 
/ordmasculine 
<10bf31705e92d28c4f102abbf54d952b5de7933b4389d590a6c4d219e440
a5c2b577cb371224534a2d4a553f9b9bf28e0a8846ac8051b280618b4c77
09d44b> ND 
/ae 
<10bf317079bb21e4> ND 
/dotlessi 
<10bf317079bb21e4> ND 
/lslash 
<10bf317079bb21e4> ND 
/oslash 
<10bf317079bb21e4> ND 
/oe 
<10bf31704489a662bc08436538deeba4bc8085ee956062b52934e9db8be8
faf3e6c9485a583aa00752008ceeca137f54c57dec94eef5ae4d9a853118
cd5f85a45827fcf3f45f4182a5b11f049cc25512baf5fecb2ae6e62b31a7
3e3c9482be8b61894939277652fb3e1513958903d1a36c91dc2366f56b65
e5e55f7d51a3c9250a58bdb9b8076f419cfdd40675352967f72c6c646074
9ca4645f1c1fd00497bf5a1c22bd> ND 
/germandbls 
<10bf317028181688aa14b00a7ed0232975b477d8caa4fead1e32cad30276
4893c312c977462614181f9163f2fbf7760db569206d6c82cfc76d56c3c1
73a8513d5ee3f9e86972308574a01e5cd9d3aa40419bc175346d7a4863cb
6dbcafe0f4cab60cc4a4e394ad3e69bd04bd95beb0597bdb90be> ND 
/brokenbar 
<10bf3170019ab6be16acddc7ae2cef98ffdb14c6a80ca55280b24db119d1
64> ND 
/Odieresis 
<10bf317030aaf049524d21ad861a987ee999b27e859757341083a7d62165
84def687023ea6f365961d603c57297ecb5ac220139a98e0c37c2e9085b7
e78a0119634b83755c045d72a5f3c79c12f5fd066f2634bba7c83cfd4c06
597cc5652de713a9e2e1f351f2fb085448d8fedbb30ca941> ND 
/multiply 
<10bf3170193f9bb68d9eecbb303c582452dad6094f0fa95c9afe75eba5f9
4c9acac36359c3f420697bbe5c51abd9a11d88ddd16b1362faa460431e25
0f22> ND 
/plusminus 
<10bf31702956a64838ec6e84aa6d232c57f42efcd78041dca341f3f9b3f0
801b46a40315f796d5245d3700ea3f3740871ec2c6abdc2c0149c7c3> ND 
/Ntilde 
<10bf31701b9d2e0e7516eb9f7e36ab2c9f286bc6ac55b70aecb4e623a9ed
ff9ae0784b29748dabe3ec4b964041c792911b33f48054ca470773314ba9
6fc406b45d076568faa05750d9e719b0c10f28d87f461c2df641450508c1
701a77a6e760629f4468f9abab8f6d729c9414be08fef3becc4e1f401b91
6301eb7b6dd1d9a864ece13e8a828b6b10c0951430015ec9f7f88e> ND 
/eth 
<10bf317079bb21e4> ND 
/Igrave 
<10bf317073aeb8642fb22a93d91ddbc9c5e974dc22ce6bad6fd97b8cc106
ae643e823ffe3e> ND 
/Ccedilla 
<10bf317030aa083cc281922089bc4995e1d4572913eea9642c0ded1ef72d
10242c68b6224c2d5e4676e75be9080eeedaa4ec8970a733d19c126c5509
b1f03ac9dc70569cf0c9cfd7084211a7c7cdca72c9cec6555a272a7937b6
68ed2e7661547b265a133278b2aef21bb59e262c8c35d362e3f6360c9198
5b4af49a4a4425783d2babd985674ae244cd6348d4fc5ce02f8b002932e5
12> ND 
/thorn 
<10bf317079bb21e4> ND 
/onesuperior 
<10bf31703bc537f19a1cfdd6c9c650cd3ee4fe7d8df27b8a28eb4b21b302
> ND 
/Idieresis 
<10bf3170675b4d3401df2b7fb9115cc168ed537adeccda027b6baa8b8e3e
e52b6342579e6ed0e8e7747f1e03> ND 
/Aacute 
<10bf31706c4d8e6db23e4e7dd10421235347a91667751ec88a49b1a910ce
a3972bd463d970330f6c30025edba37a6883171fe559abd5987dd70f651f
5c2d1df12b24abdfaded6e714db87e568de63c29df> ND 
/Oacute 
<10bf317030aaf049524d21ad861a987ee999b27e859757341083a7d62165
84def687023ea6f365961d603c57297ecb5ac220139a98e0c37c2e9085b7
e78a0119634b83755c045d72a5f3c79c12f5fd066f2634bba7c83cfd4c06
557b0e0f50ddbc85aecccf7f1242c5e4> ND 
/Acircumflex 
<10bf31706c4d8e6db23e4e7dd10421235347a91667751ec88a49b1a910ce
a3972bd463d970330f6c30025edba37a6883171fe559abd5987dd70f651f
5c2d1df12b240aa2bf960ef8873c537a12367e4d1ad12e0e69af1d296a84
4c0a> ND 
/Zcaron 
<10bf317079bb21e4> ND 
/Eacute 
<10bf317005a58e2868ec80f87b86200583708f825d6b2c1c1312977a2aa0
9136ca794a38c61a48ea76846c0f02d850d7a9262e8c02618a5a3b34841f
a4a11d65> ND 
/degree 
<10bf317079bb21e4> ND 
/onequarter 
<10bf317027e8291da7f5ea12c995835aa2052af2b667055f2fbfb052e00e
ca5045ce4260c71f9f17c3051693cdd91242e55f663b2b6a78cfc01f26a2
65da4d90e47e1e326e1afcabc05482612ac49bd7d980557b75c0b4ca4768
3baa73f8fa4905616312fcca0298a0b913> ND 
/Otilde 
<10bf317030aaf049524d21ad861a987ee999b27e859757341083a7d62165
84def687023ea6f365961d603c57297ecb5ac220139a98e0c37c2e9085b7
e78a0119634b83755c045d72a5f3c79c12f5fd066f2634bba7c83cfd4c06
5526980cfbbe5ae242fd0a759538c53e20d457b6e053221445fff7e85cc2
55c04dab84b7fa101e10557a96c0ca1fbed0b6a3c0382be7aa918441ba41
c7ac9b58c82c2d1a9cb3b1b7> ND 
/minus 
<10bf317079bb21e4> ND 
/logicalnot 
<10bf31702956a64837a2ab73dff52f70029ae193822a6ca141617287> ND 
/ccedilla 
<10bf317079bb21e4> ND 
/trademark 
<10bf31705b052e8fbd232ef9e68dd12cab80ddb2866e5f1a8963a76059ee
4e527d623bad4fc8238c2da481b1cfd98942e7472c989905c3bf61e2b080
d8f2e1418ca5ebb3d21a989076caf39f85c88d07eaab463321a6c22056ed
5296db061704dac04f11afe47520b44ee3ef9b7e1c8827abc1f86d2a37ff
0ec3d54dfbf606cd97> ND 
/Ograve 
<10bf317030aaf049524d21ad861a987ee999b27e859757341083a7d62165
84def687023ea6f365961d603c57297ecb5ac220139a98e0c37c2e9085b7
e78a0119634b83755c045d72a5f3c79c12f5fd066f2634bba7c83cfd4c06
592b16621ff2a56f92e54f260129a830f0> ND 
/mu 
<10bf31703f932f5efd2862fd66a269c53cda0e8994d1021f59da85bf7ca4
10edbdf745cc302f140073255c7bd82a06851a13a123ad0d15e60128f4c3
ffca75298e684f29bf4dae67129697d8583e981cea55a1d2afd651f8fba2
5d2de33617b656f0c988> ND 
/twosuperior 
<10bf31705fce2ebccd778a4640360d2585e550d4d5fc83eeb64dc36ecef1
8e92590e890df73457600cf97d51678a2de5b8ef1bd495fc50e7a8962d4a
83bbc24e98029ff618ad6a> ND 
/Thorn 
<10bf31701e36255aa3845174610975e1f946739def200b341e8b22694718
33809187301b277e8859bf5accbba4e6d02327b3d25f6befdbf5962106f3
db33763a0cdcf8e9f51e27edc32b03210d> ND 
/Uacute 
<10bf31701b9d2e0e75dc1c6f9b5aea056774505faca68af8aefb14d9b5e0
5605fbd4781069b577e1ba89f56e46ef8235b3d328a5286b1ddf1698628a
08e4fd46d244a9da3869f9c631c1da6e47392f> ND 
/Agrave 
<10bf31706c4d8e6db23e4e7dd10421235347a91667751ec88a49b1a910ce
a3972bd463d970330f6c30025edba37a6883171fe559abd5987dd70f651f
5c2d1df12b24bddf7a1726a7b571c04ef13591bffb8c40> ND 
/Atilde 
<10bf31706c4d8e6db23e4e7dd10421235347a91667751ec88a49b1a910ce
a3972bd463d970330f6c30025edba37a6883171fe559abd5987dd70f651f
5c2d1df12b248d0e054658802ec2d9766568f3f5b6cd6f1907ea58bae61c
65684584e3a3f026ca4f6fd82ce08bf5bde8e2c2e7e9155547ade9ecdffe
585edd167accbcdc6317a165af2e4b44d4> ND 
/Ugrave 
<10bf31701b9d2e0e75dc1c6f9b5aea056774505faca68af8aefb14d9b5e0
5605fbd4781069b577e1ba89f56e46ef8235b3d328a5286b1ddf1698628a
08e4fd4612bca2cb8fb701d77375e8b1cf1dc3143c> ND 
/Yacute 
<10bf3170560ebfa11226575da471fe119ba848cb433c8b0739f1da690ace
19e0e58aee8178eaae5dcdd2bab4b4e420e9b227cf9d0b043315cd6f5862
d69dbaef8fcfec92a706f19d1e> ND 
/Adieresis 
<10bf31706c4d8e6db23e4e7dd10421235347a91667751ec88a49b1a910ce
a3972bd463d970330f6c30025edba37a6883171fe559abd5987dd70f651f
5c2d1df12b24bdf489e7e7529eba892409ec7e7b4b4599416f44c0020865
d3> ND 
/Aring 
<10bf31706c4d8e6db23e4e7dd10421235347a91667751ec88a49b1a910ce
a3972bd463d970330f6c30025edba37a6883171fe559abd5987dd70f651f
5c2d1df12b240d3776c73bdecdff80dbc4852a6d74d1f91b6b148a6ef83e
e38e1b212fc17f69c8c0b340961cb085216c55dad6da53b07de99b240432
5e> ND 
/Ucircumflex 
<10bf31701b9d2e0e75dc1c6f9b5aea056774505faca68af8aefb14d9b5e0
5605fbd4781069b577e1ba89f56e46ef8235b3d328a5286b1ddf1698628a
08e4fd4615cbba89f2256170bb3a2d5649a16db0d28aaf4140db20ed4c2d
e6> ND 
/Ydieresis 
<10bf3170560ebfa11226575da471fe119ba848cb433c8b0739f1da690ace
19e0e58aee8178eaae5dcdd2bab4b4e420e9b227cf9d0b043315cd63f3a1
33f06959edfc8c2bbcd93fb039dd33cc98e1203078> ND 
/Udieresis 
<10bf31701b9d2e0e75dc1c6f9b5aea056774505faca68af8aefb14d9b5e0
5605fbd4781069b577e1ba89f56e46ef8235b3d328a5286b1ddf1698628a
08e4fd4612ccb9f4414ff094663fec0b963b7e0535bcbae8f8b02e62> ND 
/threequarters 
<10bf3170422e9b3efb41b33af722d0e9ca6f2d869a3ad36f6eaee4d20401
feec0c13765b3f48c03185a87b897ff1c493aa272a733a312ccb6fb15bb1
aec33c347346ec8a542f51643b110bfd17b840edd2e491c36c7007952eb9
cb1058f9e55f059ebc8f1547ae33138171fbade4c69135fd21508cb1c600
189517b96435b79c2c41007c1a8f922d6b542312f0b36d20a7215bd42c87
fc5df606c8ad8071625baee158b7045b33dad4e0fa50bc16a3fef0> ND 
/Ocircumflex 
<10bf317030aaf049524d21ad861a987ee999b27e859757341083a7d62165
84def687023ea6f365961d603c57297ecb5ac220139a98e0c37c2e9085b7
e78a0119634b83755c045d72a5f3c79c12f5fd066f2634bba7c83cfd4c06
2e4e396bbfdba15fab1df0de3f7a75795bd00eba57f1acbade78> ND 
/Eth 
<10bf3170573fcb2e5bb79f1ea4f38560123f60aab797e43e4c297ff9d1db
6aa475b9ebf136ec2cd8b464fedf810f66b4c34cbc5d060eaea7d8ff34bf
9be7e70b1950cc54f78715ab5a693dfc6e6177b10d8ccec67b> ND 
/onehalf 
<10bf317022f0b80e096debfdf8c43ebad0c033abeba50cb09f763d013514
a235b88f6bb01808f4176d0ae613d0438d139b75486cead87cf68cfea259
36fe9fd282b1ebe875ed8702763ea374cc742e238fea6e7acf8695f62ceb
9ce6da4e6aaf789b35f0812a9f86a135389d> ND 
/Edieresis 
<10bf317005a58e2868ec80f87b86200583708f825d6b2c1c1312977a2aa0
9136ca794a38c61a48ea76846c0f02d850d7a96bc1fd66954fa23d59de94
60329e39ac86216ef1326111da> ND 
/divide 
<10bf317079bb21e4> ND 
/Egrave 
<10bf3170042143beb05b9f00953bfd9fdb8bfc70135c88eae9a22ff4f705
10ad86024d5e4bca37869125ddd28274036b9455531b0ce3d2762c499c15
32b9fe0707> ND 
/Euro 
<10bf317079bb21e4> ND 
/threesuperior 
<10bf31705d6b27d191363b0cafb838cc5ceec3ada282a23bf1adb3febc3d
48102a526c7dce072ce90925e49eada7ce67927d6d73c4f6ac4277bfd6d1
6460e5b95768cf352d687b54b0a1f085503a0297826994cd9bbb5fc3e717
7e2a7a0968a94074b51e5a4624b5b2b5> ND 
/copyright 
<10bf31702bb2ab4989fb125b1ca0c925e16c2817a2ae10ec4ff1327ef389
d0aa607dbb4afab98edfb17dec9636519adcc89bbc4e9c560265c84c0d9f
3d065814f0570990579dbf3c532ac972314bbda1ec08d1febad216020876
e423e71a8217754cd201b9d6b16d4c2cbe4e765cb1847100d7a85df764a8
0bffae9954c92b2a4ba2586ca52a33f64105cc220733ea7e9ac2e0ce6fb9
1b4c366330b7ebef79ac2bc665b921bb7f4a3af170e1c2aeee08a6f95f37
c3815904a63748f77189f98ccfc2124217230f037ea7cd1efae92fceeb5a
1e7d04a10acc> ND 
/Scaron 
<10bf317033474622541600cc2acc0f9a1a21d860dd13cae6b2a2e0d1db84
bf8c11b9c8200d539d5d6df9ad95df75cbb91cee52542ba8b2e89d06d385
5f6188883ac9bbacd5c45a12eb260272e8b0d364a7ad65265e472633926f
e938aace9a388efe95d9c448e82e19b19326f278fd880ec47df55e79c728
96119b424b1d449136811125c288f0b6f349b2005c3d5c6d67a814fb6c91
c855aa47d559fb4ea166c9313e158c5c7d61107366167f97db78ff499690
92af3a3433> ND 
/Ecircumflex 
<10bf317005a6bc9619e0204d54197f5cc86ba425bf513630faf20dbc835b
b353461e1bd214dcb74ae6c7b3f43381fc5d34b8fcf7316d690313f4a74f
0e344cb24e4a5dfea7057c92c768b951> ND 
/registered 
<10bf31702bb2ab4986119ccfc02cbdb3bda629d58dcb7ab6aae72404f425
c231818d4ea38dceddee1a3b84c488a6803082ce0c6128ef1d37cf3ec31a
5748fb246f2f2b8599b0d21b8979debb90611bb08203dca48f387409214d
6f237994c60de34aa76452d65a9aa921aba311d2e0fb38feca60edcfe9bd
a29e6afcd481be35dd9a8f59893a27ff3562ddb931234a33f3b46f68a2bf
e16f3865b39efe62611673364c8bebcb02> ND 
/Icircumflex 
<10bf317088bfdbd0899b6f51483c873173e175a09b0ef351513112d54612
666f6665bc52a57f6fc0ec96223bab98> ND 
/Iacute 
<10bf31703f9c9bdbcd90e9403004128c7d89bcd77d1cb75013c5d0b8f3d4
9b0946c534> ND 
/aacute 
<10bf31704ab25030308a55d862f090039ebda733c4facdc470cf7acd7ab0
4936ec72746e500c2d0f11fe0e29a9faa37ac61b7d483b30cd66b553e659
0abe1677a3ba4bece3bd4b8a761f6295f831cffa61ff8f7eee2dd6dda436
5462b4fbd6b7af08e11e7012517d573f06aa74cdd03fd7209a82ee80899a
84f0a4010d0bc11098a4f36f6d759e> ND 
/acircumflex 
<10bf31704ab250303fd23e11b011fc94b8d94caf22e14d5feda8c9b3e615
0565d3fdad2de20f70c0c7d3d00511d241bd60f0457bf74f62cc6d1e07de
5037dc27ccbe4155f3c6e193fa62ab99e5f14b47a22d977651f7a87b97a9
ca8c7701a25c37654c91f1e087acffa8f11d88fa34c5a8d1be42658ef816
b93d3f32f2f6b5de8f721769699b2024c6dda0378e5ab699a8e90348> ND 
/adieresis 
<10bf317079bb21e4> ND 
/agrave 
<10bf31704ab250301b5f12bbfb0720b74c3c67d938135fb2c6170dd32ef2
2298bd4e634b9e9f838b5fe28215bc67f011e577a4ebbdb72320bd644080
a21091512a3f00072973a803446aeef7d99f0c4b50693ec8fe45a72cafdf
62c349b7889b7f00df1534fb07705dfb5b949e241cbe2cb4fd30576f4ca5
75f681043917c8109e73420814f1c0ec> ND 
/aring 
<10bf317079bb21e4> ND 
/atilde 
<10bf31704ab250303fb1d3b5fadc9585fe7bc277c2db4312d63a129d65eb
83c35c6bd9dbd93034ea54ee9052218dc3a2f4214c0357087a2af53313b5
f21b321a4745885def91bfba2213a52abe2b8f4d1efc138b705985f2e2ad
d03f54640a5b3f3363b72920ed4758cb094662abdda7c453a494e03aacfa
a4bd208e940cab95c1fe59b412a9a2c7cece2c7c406bed87ec0e7dca6d32
4d257161f83d59cca4f3306a9e2836742bd8546fc211ae4740a1ee1a79f9
09271e19988992180333aa35d3> ND 
/eacute 
<10bf317079bb21e4> ND 
/ecircumflex 
<10bf317079bb21e4> ND 
/edieresis 
<10bf317079bb21e4> ND 
/egrave 
<10bf317079bb21e4> ND 
/iacute 
<10bf317079bb21e4> ND 
/icircumflex 
<10bf317079bb21e4> ND 
/idieresis 
<10bf317079bb21e4> ND 
/igrave 
<10bf317079bb21e4> ND 
/ntilde 
<10bf317079bb21e4> ND 
/oacute 
<10bf317079bb21e4> ND 
/ocircumflex 
<10bf317079bb21e4> ND 
/odieresis 
<10bf317079bb21e4> ND 
/ograve 
<10bf317079bb21e4> ND 
/otilde 
<10bf317079bb21e4> ND 
/scaron 
<10bf317040c2e74a5f7fa1a3e883852987f7385f7c45944372a8c3b673b4
fb85fce5d419433b0c2f10119c214faeb7ea0dad9791d32766bd6d162400
7d95838de9a48ca164d982023ba21940b3553bbacad619853bf9ead0e207
2e14d7c522db40ef79facab1cc1e15951b0472afa63e853d481d6e16336b
07998f98f00dc0a9c3cc98360c35385cdd5a74ea88f9674b8a5808e44bb3
6076079f6ca3a4aa89bdc694f4894d8e6b1f8e5200c7f4d3c13715a1a721
cca4b5715ae16802a7d8769bd3fa5a74bb> ND 
/uacute 
<10bf317079bb21e4> ND 
/ucircumflex 
<10bf317079bb21e4> ND 
/udieresis 
<10bf317079bb21e4> ND 
/ugrave 
<10bf317079bb21e4> ND 
/yacute 
<10bf317079bb21e4> ND 
/ydieresis 
<10bf317079bb21e4> ND 
/zcaron 
<10bf317079bb21e4> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/Helvetica findfont /Encoding get
dup 32 /space put
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
dup 161 /exclamdown put
dup 162 /cent put
dup 163 /sterling put
dup 164 /fraction put
dup 165 /yen put
dup 166 /florin put
dup 167 /section put
dup 168 /currency put
dup 169 /quotesingle put
dup 170 /quotedblleft put
dup 171 /guillemotleft put
dup 172 /guilsinglleft put
dup 173 /guilsinglright put
dup 174 /fi put
dup 175 /fl put
dup 177 /endash put
dup 178 /dagger put
dup 179 /daggerdbl put
dup 180 /periodcentered put
dup 182 /paragraph put
dup 183 /bullet put
dup 184 /quotesinglbase put
dup 185 /quotedblbase put
dup 186 /quotedblright put
dup 187 /guillemotright put
dup 188 /ellipsis put
dup 189 /perthousand put
dup 191 /questiondown put
dup 193 /grave put
dup 194 /acute put
dup 195 /circumflex put
dup 196 /tilde put
dup 197 /macron put
dup 198 /breve put
dup 199 /dotaccent put
dup 200 /dieresis put
dup 202 /ring put
dup 203 /cedilla put
dup 205 /hungarumlaut put
dup 206 /ogonek put
dup 207 /caron put
dup 208 /emdash put
dup 225 /AE put
dup 227 /ordfeminine put
dup 232 /Lslash put
dup 233 /Oslash put
dup 234 /OE put
dup 235 /ordmasculine put
dup 241 /ae put
dup 245 /dotlessi put
dup 248 /lslash put
dup 249 /oslash put
dup 250 /oe put
dup 251 /germandbls put
dup 0 /brokenbar put
dup 127 /.notdef put
pop
550 -28 mo
-26 -28 ln
-26 404 ln
550 404 ln
550 -28 ln
false op
0 0 0 0 cmyk
f
0.48 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
550 -28 mo
-26 -28 ln
-26 404 ln
550 404 ln
550 -28 ln
cp
s
48.8799 356.36 mo
48.8799 4.3999 ln
495.159 4.3999 ln
495.159 356.36 ln
48.8799 356.36 ln
f
48.8799 356.36 mo
48.8799 4.3999 ln
495.159 4.3999 ln
495.159 356.36 ln
48.8799 356.36 ln
s
48.8799 4.3999 mo
495.159 4.3999 ln
48.8799 356.36 mo
495.159 356.36 ln
495.159 356.36 mo
495.159 4.3999 ln
48.8799 356.36 mo
48.8799 4.3999 ln
48.8799 356.36 mo
495.159 356.36 ln
48.8799 356.36 mo
48.8799 4.3999 ln
48.8799 356.36 mo
48.8799 351.92 ln
48.8799 4.3999 mo
48.8799 8.83984 ln
0 0 0 1 cmyk
s
save_ctm
restore_ctm
93.5195 356.36 mo
93.5195 351.92 ln
93.5195 4.3999 mo
93.5195 8.83984 ln
s
save_ctm
%ADOBeginSubsetFont: Helvetica Initial
11 dict begin
/FontName /Helvetica def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 230 dict dup begin
/.notdef 
<10bf317079bb21e4> ND 
/zero 
<10bf317040c2af124ea0a49a7bf41805b177f7c4208c932584e43c9a0bae
7a5e09aeeba03bdb3baaad65f0cfeefbf4dfea480c85f107e431a3019391
4313291eb8234a5c6b4c6242500b667415> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/Helvetica findfont /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/Helvetica*1 
[
48{/.notdef}repeat /zero 207{/.notdef}repeat
] /Helvetica nfnt
/Helvetica*1 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
46.1201 368.12 mov
(0) sh
restore_ctm
138.16 356.36 mo
138.16 351.92 ln
138.16 4.3999 mo
138.16 8.83984 ln
s
save_ctm
%ADOBeginSubsetFont: Helvetica AddGlyphs

systemdict begin
/Helvetica 
findfont dup
/Private get begin
/CharStrings get begin
/five 
<10bf31703a9b9e75bb2e0c70578b80ef68b77db429dab9d081841e1cae7e
43a7ad1edd665660b80f010c71f0d41d1d4f59f9c78880d1ab7224aece9b
55b74a84b8d91e5db90111cd94a72bf01c561d00ea7f03613531aae2ceeb
7dd3c092ee8ac48d> ND 
end end
end
/Helvetica findfont /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/Helvetica*2 
[
53{/.notdef}repeat /five 202{/.notdef}repeat
] /Helvetica nfnt
/Helvetica*2 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
90.7598 368.12 mov
(5) sh
restore_ctm
182.8 356.36 mo
182.8 351.92 ln
182.8 4.3999 mo
182.8 8.83984 ln
s
save_ctm
%ADOBeginSubsetFont: Helvetica AddGlyphs

systemdict begin
/Helvetica 
findfont dup
/Private get begin
/CharStrings get begin
/one 
<10bf31702ce19e53b6f609b518076fe6c6a8d5cacbe441b89e80257f3d1f
645b> ND 
end end
end
/Helvetica findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/Helvetica*3 
[
49{/.notdef}repeat /one 206{/.notdef}repeat
] /Helvetica nfnt
/Helvetica*3 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
132.64 368.12 mov
(1) sh
/Helvetica*1 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
138.157 368.12 mov
(0) sh
restore_ctm
227.439 356.36 mo
227.439 351.92 ln
227.439 4.3999 mo
227.439 8.83984 ln
s
save_ctm
/Helvetica*3 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
177.28 368.12 mov
(1) sh
/Helvetica*2 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
182.798 368.12 mov
(5) sh
restore_ctm
272.079 356.36 mo
272.079 351.92 ln
272.079 4.3999 mo
272.079 8.83984 ln
s
save_ctm
%ADOBeginSubsetFont: Helvetica AddGlyphs

systemdict begin
/Helvetica 
findfont dup
/Private get begin
/CharStrings get begin
/two 
<10bf31703a9b9e75ea81f4b86404c8c5b0ed48d346c9f9e1e6722a5907cf
5eb758c85cae665702f340820b73ace5e11f7e6546083389554dbb23251d
c842d74279d70cbe6fec8d3905d4e2> ND 
end end
end
/Helvetica findfont /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/Helvetica*4 
[
50{/.notdef}repeat /two 205{/.notdef}repeat
] /Helvetica nfnt
/Helvetica*4 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
221.92 368.12 mov
(2) sh
/Helvetica*1 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
227.438 368.12 mov
(0) sh
restore_ctm
316.6 356.36 mo
316.6 351.92 ln
316.6 4.3999 mo
316.6 8.83984 ln
s
save_ctm
/Helvetica*4 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
266.56 368.12 mov
(2) sh
/Helvetica*2 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
272.077 368.12 mov
(5) sh
restore_ctm
361.239 356.36 mo
361.239 351.92 ln
361.239 4.3999 mo
361.239 8.83984 ln
s
save_ctm
%ADOBeginSubsetFont: Helvetica AddGlyphs

systemdict begin
/Helvetica 
findfont dup
/Private get begin
/CharStrings get begin
/three 
<10bf31703e65fd7e38478bb8cdc815f391da1d8e98fb667ae1de5387b9e2
5adf16a18c21547c5b7e4a4d3bb688955858c2a2587f884949e50417a4ed
da8e91b48b3d6aefaa61a288b6b8877c330f52739b732112e18c9e258477
a11af5a92cb3ed0ed0b61758427ed7a13137d28d15> ND 
end end
end
/Helvetica findfont /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/Helvetica*5 
[
51{/.notdef}repeat /three 204{/.notdef}repeat
] /Helvetica nfnt
/Helvetica*5 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
311.079 368.12 mov
(3) sh
/Helvetica*1 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
316.597 368.12 mov
(0) sh
restore_ctm
405.88 356.36 mo
405.88 351.92 ln
405.88 4.3999 mo
405.88 8.83984 ln
s
save_ctm
/Helvetica*5 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
355.72 368.12 mov
(3) sh
/Helvetica*2 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
361.238 368.12 mov
(5) sh
restore_ctm
450.52 356.36 mo
450.52 351.92 ln
450.52 4.3999 mo
450.52 8.83984 ln
s
save_ctm
%ADOBeginSubsetFont: Helvetica AddGlyphs

systemdict begin
/Helvetica 
findfont dup
/Private get begin
/CharStrings get begin
/four 
<10bf317031d92f340665f9d57abf5ced546b77824781b603d888989411b4
cf09c8b71519972084b8ba5252f3ba85349db148c917e4da3ebffc407235
b686a99bfe4fa711d32821> ND 
end end
end
/Helvetica findfont /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/Helvetica*6 
[
52{/.notdef}repeat /four 203{/.notdef}repeat
] /Helvetica nfnt
/Helvetica*6 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
400.359 368.12 mov
(4) sh
/Helvetica*1 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
405.877 368.12 mov
(0) sh
restore_ctm
495.159 356.36 mo
495.159 351.92 ln
495.159 4.3999 mo
495.159 8.83984 ln
s
save_ctm
/Helvetica*6 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
445 368.12 mov
(4) sh
/Helvetica*2 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
450.518 368.12 mov
(5) sh
restore_ctm
48.8799 356.36 mo
53.3203 356.36 ln
495.159 356.36 mo
490.72 356.36 ln
s
save_ctm
/Helvetica*2 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
489.64 368.12 mov
(5) sh
/Helvetica*1 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
495.157 368.12 mov
(0) sh
restore_ctm
48.8799 297.68 mo
53.3203 297.68 ln
495.159 297.68 mo
490.72 297.68 ln
s
save_ctm
/Helvetica*1 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4795 359.84 mov
(0) sh
restore_ctm
48.8799 239 mo
53.3203 239 ln
495.159 239 mo
490.72 239 ln
s
save_ctm
/Helvetica*2 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4795 301.16 mov
(5) sh
restore_ctm
48.8799 180.44 mo
53.3203 180.44 ln
495.159 180.44 mo
490.72 180.44 ln
s
save_ctm
/Helvetica*3 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
34.96 242.479 mov
(1) sh
/Helvetica*1 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4778 242.479 mov
(0) sh
restore_ctm
48.8799 121.76 mo
53.3203 121.76 ln
495.159 121.76 mo
490.72 121.76 ln
s
save_ctm
/Helvetica*3 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
34.96 183.92 mov
(1) sh
/Helvetica*2 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4778 183.92 mov
(5) sh
restore_ctm
48.8799 63.0801 mo
53.3203 63.0801 ln
495.159 63.0801 mo
490.72 63.0801 ln
s
save_ctm
/Helvetica*4 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
34.96 125.24 mov
(2) sh
/Helvetica*1 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4778 125.24 mov
(0) sh
restore_ctm
48.8799 4.3999 mo
53.3203 4.3999 ln
495.159 4.3999 mo
490.72 4.3999 ln
s
save_ctm
/Helvetica*4 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
34.96 66.5601 mov
(2) sh
/Helvetica*2 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4778 66.5601 mov
(5) sh
restore_ctm
48.8799 4.3999 mo
495.159 4.3999 ln
48.8799 356.36 mo
495.159 356.36 ln
495.159 356.36 mo
495.159 4.3999 ln
48.8799 356.36 mo
48.8799 4.3999 ln
s
/Helvetica*5 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
34.96 7.87988 mov
(3) sh
/Helvetica*1 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4778 7.87988 mov
(0) sh
gsave
57.3994 356.479 mo
495.279 356.479 ln
495.279 63.9199 ln
57.3994 63.9199 ln
57.3994 356.479 ln
clp
57.7598 64.2798 mo
66.7598 323.96 ln
75.6396 292.28 ln
84.6396 287.479 ln
93.5195 284.96 ln
102.399 286.28 ln
111.399 292.04 ln
120.28 299.479 ln
129.16 305.479 ln
138.16 311.6 ln
147.04 315.68 ln
156.04 320.72 ln
164.92 322.52 ln
173.8 325.28 ln
182.8 327.92 ln
191.68 330.8 ln
200.56 332.12 ln
209.56 335.24 ln
218.439 338.479 ln
227.439 341.6 ln
236.32 344.24 ln
245.2 347.12 ln
254.2 348.32 ln
263.079 350.12 ln
272.079 351.32 ln
280.96 352.04 ln
289.84 353 ln
298.84 353 ln
307.72 353.479 ln
316.6 354.08 ln
325.6 354.56 ln
334.479 354.92 ln
343.479 355.16 ln
352.359 355.4 ln
361.239 355.52 ln
370.239 355.64 ln
379.119 355.76 ln
388 355.76 ln
397 355.76 ln
405.88 355.76 ln
414.88 355.88 ln
423.76 355.88 ln
432.64 356 ln
441.64 356 ln
450.52 356 ln
459.399 356 ln
468.399 356.12 ln
477.279 356.12 ln
486.279 356.12 ln
495.159 356.12 ln
s
grestore
203.32 330.68 mo
203.32 329.12 202 327.92 200.439 327.92 cv
198.88 327.92 197.68 329.12 197.68 330.68 cv
197.68 332.24 198.88 333.56 200.439 333.56 cv
202 333.56 203.32 332.24 203.32 330.68 cv
cp
105.16 295.4 mo
105.16 293.84 103.84 292.64 102.28 292.64 cv
100.72 292.64 99.5195 293.84 99.5195 295.4 cv
99.5195 296.96 100.72 298.28 102.28 298.28 cv
103.84 298.28 105.16 296.96 105.16 295.4 cv
cp
55.7197 13.04 mo
59.7998 17.1201 ln
59.7998 13.04 mo
55.7197 17.1201 ln
145 315.08 mo
149.08 319.16 ln
149.08 315.08 mo
145 319.16 ln
90.6396 264.92 mo
96.3994 264.92 ln
93.5195 262.04 mo
93.5195 267.8 ln
54.8799 56.7197 mo
60.6396 56.7197 ln
57.7598 53.8398 mo
57.7598 59.6001 ln
99.5195 271.28 mo
105.28 271.28 ln
102.399 268.4 mo
102.399 274.16 ln
233.439 351.08 mo
239.2 351.08 ln
236.32 348.2 mo
236.32 353.96 ln
100.359 269.24 mo
104.439 273.32 ln
104.439 269.24 mo
100.359 273.32 ln
234.28 349.04 mo
238.359 353.12 ln
238.359 349.04 mo
234.28 353.12 ln
s
0 lj
162.64 314.36 mo
167.2 314.36 ln
167.2 318.92 ln
162.64 318.92 ln
162.64 314.36 ln
cp
118 297.68 mo
122.56 297.68 ln
122.56 302.24 ln
118 302.24 ln
118 297.68 ln
cp
263.079 352.52 mo
265.96 348.8 ln
263.079 345.08 ln
260.2 348.8 ln
263.079 352.52 ln
cp
s
gsave
230.2 345.56 mo
242.92 345.56 ln
242.92 332 ln
230.2 332 ln
230.2 345.56 ln
clp
236.32 341.84 mo
239.2 338.12 ln
236.32 334.4 ln
233.439 338.12 ln
236.32 341.84 ln
cp
s
grestore
218.439 337.4 mo
221.68 331.76 ln
215.2 331.76 ln
218.439 337.4 ln
cp
173.8 316.76 mo
177.04 311.12 ln
170.56 311.12 ln
173.8 316.76 ln
cp
s
gsave
131.32 324.32 mo
144.399 324.32 ln
144.399 312.56 ln
131.32 312.56 ln
131.32 324.32 ln
clp
134.92 320.6 mo
141.399 320.6 ln
138.16 314.96 ln
134.92 320.6 ln
cp
s
grestore
63.5195 338.72 mo
70 338.72 ln
66.7598 333.08 ln
63.5195 338.72 ln
cp
162.16 328.4 mo
164.2 328.4 ln
164.92 326.479 ln
165.52 328.4 ln
167.56 328.4 ln
166 329.6 ln
166.6 331.64 ln
164.92 330.44 ln
163.12 331.64 ln
163.72 329.6 ln
162.16 328.4 ln
cp
206.8 338.6 mo
208.84 338.6 ln
209.56 336.68 ln
210.16 338.6 ln
212.2 338.6 ln
210.64 339.8 ln
211.24 341.84 ln
209.56 340.64 ln
207.76 341.84 ln
208.359 339.8 ln
206.8 338.6 ln
cp
251.8 347.24 mo
253.479 347.24 ln
254.2 345.8 ln
254.92 347.24 ln
256.6 347.24 ln
255.64 348.68 ln
256.6 350.12 ln
254.92 350.12 ln
254.2 351.56 ln
253.479 350.12 ln
251.8 350.12 ln
252.76 348.68 ln
251.8 347.24 ln
cp
216.04 342.2 mo
217.72 342.2 ln
218.439 340.76 ln
219.16 342.2 ln
220.84 342.2 ln
219.88 343.64 ln
220.84 345.08 ln
219.16 345.08 ln
218.439 346.52 ln
217.72 345.08 ln
216.04 345.08 ln
217 343.64 ln
216.04 342.2 ln
cp
s
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: Helvetica AddGlyphs

systemdict begin
/Helvetica 
findfont dup
/Private get begin
/CharStrings get begin
/space 
<10bf317079c7734bf7> ND 
/E 
<10bf317005a58e2868ec80f87b86200583708f825d6b2c1c1312977a2aa0
9136ca794a38c61a48ea76846c0f02d850d7a99e> ND 
/a 
<10bf31704ab2503030c021d3d8028b7bc4bfbdda0b384d37165e7edc7224
c6b7284f4de3fb2230c3519ca1dfdf0794ae73a56195e366ee517aea1bc7
15d8e71ca6dea10d350cb831aea6bd036571313dd703ee062740a71fb36d
413e17368e48b3738eaaf8619a516df6c4ecb0dcbd3677f8c5bf8c42f568
> ND 
/c 
<10bf317041f0a949233299062f20927d17046b803a3239107f5fc5937643
6d193872a9c41376664ee1d53646aab55191f7f22c2d93139e9b3f1f9218
d273604ce5dbbf3c0707849e2a0760> ND 
/d 
<10bf317047276c4999a66a7f91a435f5a2bcb493402c2f337c6cef41543c
564d2b6989b1943e8fd4c28f55b8e5efc85e71de1caae3a017bed9fc6b70
afba1bfd24a27b96bb7a1facf3da7bfe50e6a042548913a52e71105f7526
30b5196211a132> ND 
/e 
<10bf31704ab2503030fec2f45e7e5cf47e903e674aa3389f3620374e8c9e
d34a92ac68abe08c5fb790c6003e9d3a6d07d3d1b09583c781dacd978778
0fb9acba71e6fcfe215aa4800c46f320f947c16c522a6b6cd76318c56f25
e3703c6a5c41576b7f6c890695b9841c9ec2> ND 
/i 
<10bf317027e610bfa7f58864b8a844d638cba10895c23a50649476cd3513
20433660> ND 
/l 
<10bf317027e610bfa71a148f1972e3967a34832e55> ND 
/n 
<10bf31702094ca827fd8441c0957d83eccde8fe7a19fdec1dee56880a8ac
6704f60fb746f4455bf7692c8e2a462cae77a324bebf77f6593a284862ac
3209d1bde2c95ed48bfa234b785a19fdf4f1e4d8ae442c7831e943019755
81a7f3> ND 
/o 
<10bf317047276c4999ccbb3f4b024eb7723deb0824e8e82581c5ac58a4ab
959608a2d991f31ccafef4241c1038db31d0c5d44a55b86ae3937f5c626d
032a9801116b15e6f019245a8312dd1434dd03dd8a36d2> ND 
/t 
<10bf317065f8e1c4514de29c8c0648dd97151e5185bd64bac354fa8d1cf3
e4893266bd83dbe34f939afaa43e5bf292e9ec5becbbcf7880761e8a4389
bd1570f56ff019190df8> ND 
/u 
<10bf31703f932f5ed018c596aaa8f7609375f318f4ecbec66e97863e3512
ff20661d34a4e877adb4c4b5c4a6d91847b1377efecd3a8443467ed2398e
c773d19d50f0765c1a8c0f3f7a31fd382b41fddd16b9df52d173511bb8dd
7c> ND 
/x 
<10bf31705e925b80bb702a983dd577e183e8a6df5f7c303f38a86a305a10
87fb49523b5836913590fe8bcf09908d77054b06a8dac06f839472d764e6
dfc6273f4f18942b5615b2ea29447c16> ND 
/y 
<10bf3170789a7df8aefa30c3938f228b6b52130014271654504f35238741
a244043537fe890efa6389032d5a401fa6e2966e86999b879839803ea716
e946819819ecb365bc221200103f4a35d4583ace0d158a40057484793585
990bda1661163ff61d7709d6c92810ca8ead63d8> ND 
end end
end
/Helvetica findfont /Encoding get
dup 32 /space put
dup 69 /E put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 121 /y put
pop
%ADOEndSubsetFont
/Helvetica*7 
[
32{/.notdef}repeat /space 36{/.notdef}repeat /E 27{/.notdef}repeat /a /.notdef /c 
/d /e 3{/.notdef}repeat /i 2{/.notdef}repeat /l /.notdef /n 
/o 4{/.notdef}repeat /t /u 2{/.notdef}repeat /x /y 134{/.notdef}repeat
] /Helvetica nfnt
/Helvetica*7 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
217.479 380.479 mov
-0.0199127 0 (Execution delay) ash
restore_ctm
save_ctm
/Helvetica*7 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
287.319 380.479 mov
( ) sh
%ADOBeginSubsetFont: Helvetica AddGlyphs

systemdict begin
/Helvetica 
findfont dup
/Private get begin
/CharStrings get begin
/parenleft 
<10bf31701a61adf3e2604333c135913dc3c05542b5c0cb573c63ae20564e
d493e9ed6ba94c2577d77fa3ea7a916902daba77e5d888b09e1ffd8587ef
6896422b3ed79e8c8e2662f7c01ab0f5> ND 
/C 
<10bf317030aa083cc281922089bc4995e1d4572913eea9642c0ded1ef72d
10242c68b6224c2d5e4676e75be9080eeedaa4ec8970a733d19c126c5509
b1f03ac9dc70569cf0c9cfd7084211a7c7cdca72c9cebd928fdaa4afc8ee
e852293ecca142bce8> ND 
end end
end
/Helvetica findfont /Encoding get
dup 40 /parenleft put
dup 67 /C put
pop
%ADOEndSubsetFont
/Helvetica*8 
[
40{/.notdef}repeat /parenleft 26{/.notdef}repeat /C 188{/.notdef}repeat
] /Helvetica nfnt
/Helvetica*8 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
290.128 380.479 mov
0.039856 0 (\(C) ash
restore_ctm
save_ctm
/Helvetica*7 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
300.64 380.479 mov
-0.298782 0 (yc) ash
restore_ctm
save_ctm
/Helvetica*7 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
310.359 380.479 mov
-0.0497894 0 (le) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: Helvetica AddGlyphs

systemdict begin
/Helvetica 
findfont dup
/Private get begin
/CharStrings get begin
/parenright 
<10bf317054ad71391d20880e7d4b55e2d82fb238cf6664c04ea5d16353d7
f85f0565a49234903fd4253d99e3ee689ded6987929318b16331b6897572
65a8ecb40b8e9ded3c720f64e3e88b> ND 
/s 
<10bf317040c2e74a50db8320b72aa362422c5046ff900196ab3f5f434a4a
ef605ac2e8787b3b2c0a32f8140a7caf48f682c792596170e829a74eeab9
e6b13e5172982e4c3aa3bd41b0f2649cd6fc7558007ffe3d8b95c3a53b15
d60552dc9d8b58f17081fcda3d7441e8da35b81ca90071d9a58c33330a6c
c65f543fd95a38eac5bb470b69332ac4e09a31d6ff0c3c6f7132ba18b413
e71f969364b63412c18b670d7baef70c500eb778e76e> ND 
end end
end
/Helvetica findfont /Encoding get
dup 41 /parenright put
dup 115 /s put
pop
%ADOEndSubsetFont
/Helvetica*9 
[
41{/.notdef}repeat /parenright 73{/.notdef}repeat /s 140{/.notdef}repeat
] /Helvetica nfnt
/Helvetica*9 findfont [9.95999 0 0 -9.95999 0 0 ]mfnt sfnt
BuildWidthShowArray
318.04 380.479 mov
0.0597382 0 (s\)) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: Helvetica AddGlyphs

systemdict begin
/Helvetica 
findfont dup
/Private get begin
/CharStrings get begin
/P 
<10bf31701e36255aa36a4abed91a52afc36d1129a5bda8efeba4b7ae3645
26f0e773fdfe6c9ccd043a1905b1df6f3725e8a2c7e8aa6fc2675a717d28
8037afb9ba58138f2dc53a> ND 
/g 
<10bf317047276c4999ab487309fd1a934c068fa8af93867c98fe2d791dea
e75259b1e709a7ce38728505faa76990beaded72f11574996fac422e82f5
6f6057af7c3e4840b1ccd340c40278761c266866a20aca3639945f430d13
634443257acf715db94183f924848b87aa596fa1f720fd40ff93a60d567e
e42b466a25baf45564f62c125ec9f5adb5934a5579d10dd2748d53617e66
98549c> ND 
/m 
<10bf317021c2695e9c7fa6f82eed1619e9e5c441345edc34908a1558c814
d098cad2a350950c603d48fbbf1dd3892ba3a7a0f1377b46e09ac5cade6a
435db726ce747dab69cfed4ab554ba84052e66fc7e07266c9817537d65bf
f31b24021df986002b731bd41bbf2101ea82a479977265b6a16dfde920b0
69054a15036b7d78794b70c9c5ec866aa5647a925c21749bf38329c50848
b6eafd5abbaf882d0f9ce6> ND 
/p 
<10bf31702094ca827c0b31e3f26978ae02e7e4c0f36b1b5615f1b414c499
e50702ddb3372392561dbc0afed06ab340321cb8e542cca7fb5de8c74274
84ef63ea77040d0ffc2ec6456db0d6620e2f71662e8de73a841e0dcca864
520ce883be8257aa7e4646d5fe5fcf79a1791bef781a08056563e345c07f
3b8fe8074841eeff0d29dd36d0eabe46db8114db4f295182> ND 
/r 
<10bf317036de1a736fd7044d328eb56610489f58e06f422d5d8826e2d999
7d6965f0a38f44df78838b515ec5a86a6bf241c7e5d8a53c76fc22a6c180
d13dff057f646f7b5e7a09debb018bdbfc164820868991cbf59f> ND 
end end
end
/Helvetica findfont /Encoding get
dup 80 /P put
dup 103 /g put
dup 109 /m put
dup 112 /p put
dup 114 /r put
pop
%ADOEndSubsetFont
/Helvetica*10 
[
80{/.notdef}repeat /P 22{/.notdef}repeat /g 5{/.notdef}repeat /m 2{/.notdef}repeat /p 
/.notdef /r 141{/.notdef}repeat
] /Helvetica nfnt
/Helvetica*10 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 262.16 mov
(P) sh
/Helvetica*7 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 255.527 mov
(e) sh
/Helvetica*10 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 249.999 mov
(r) sh
/Helvetica*7 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 246.692 mov
0 0.00994873 (cent co) ash
/Helvetica*10 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 214.651 mov
0 0.00996399 (mm) ash
/Helvetica*7 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 198.078 mov
0 0.00994873 (itted ) ash
/Helvetica*10 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 176.544 mov
(r) sh
/Helvetica*7 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 173.238 mov
(e) sh
/Helvetica*10 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 167.71 mov
(g) sh
/Helvetica*7 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 162.182 mov
(i) sh
/Helvetica*9 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 159.981 mov
(s) sh
/Helvetica*7 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 155.011 mov
0 0.00996399 (te) ash
/Helvetica*10 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 146.724 mov
(r) sh
/Helvetica*7 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 143.418 mov
0 0.00996399 ( o) ash
/Helvetica*10 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 135.131 mov
(p) sh
/Helvetica*7 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 129.603 mov
(e) sh
/Helvetica*10 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 124.075 mov
(r) sh
/Helvetica*7 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 120.769 mov
0 0.00997925 (atio) ash
restore_ctm
0 0 0 1 cmyk
/Helvetica*9 findfont [0 -9.95999 -9.95999 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3994 104.6 mov
(s) sh
351.64 223.64 mo
351.64 13.04 ln
483.64 13.04 ln
483.64 223.64 ln
351.64 223.64 ln
0 0 0 0 cmyk
f
351.64 223.64 mo
351.64 13.04 ln
483.64 13.04 ln
483.64 223.64 ln
351.64 223.64 ln
s
351.64 13.04 mo
483.64 13.04 ln
351.64 223.64 mo
483.64 223.64 ln
483.64 223.64 mo
483.64 13.04 ln
351.64 223.64 mo
351.64 13.04 ln
351.64 223.64 mo
483.64 223.64 ln
351.64 223.64 mo
351.64 13.04 ln
351.64 13.04 mo
483.64 13.04 ln
351.64 223.64 mo
483.64 223.64 ln
483.64 223.64 mo
483.64 13.04 ln
351.64 223.64 mo
351.64 13.04 ln
0 0 0 1 cmyk
s
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: Helvetica AddGlyphs

systemdict begin
/Helvetica 
findfont dup
/Private get begin
/CharStrings get begin
/b 
<10bf31702094ca820c254a78deec33d46bcefb3b88be60ae4a539cc46302
cfc62a03dc640b42f99a02da9a79950b22a9d589cc8ecdf47aad59a18d38
3898e7a208643c25aa7851246ceab7df87683faba6ff9c36a6d19892b70b
8f6e52f6> ND 
/z 
<10bf31704ab218185f94615d219391c6102bb84a292d20406ae334338215
476329e7dca9973db7d91cd833d1cf> ND 
end end
end
/Helvetica findfont /Encoding get
dup 98 /b put
dup 122 /z put
pop
%ADOEndSubsetFont
/Helvetica*11 
[
98{/.notdef}repeat /b 23{/.notdef}repeat /z 133{/.notdef}repeat
] /Helvetica nfnt
/Helvetica*11 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
418.6 35.2402 mov
0.041748 0 (bz) ash
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
433.383 35.2402 mov
(i) sh
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
436.514 35.2402 mov
(p) sh
restore_ctm
381.159 30.4399 mo
381.159 28.8799 379.84 27.6802 378.279 27.6802 cv
376.72 27.6802 375.52 28.8799 375.52 30.4399 cv
375.52 32 376.72 33.3198 378.279 33.3198 cv
379.84 33.3198 381.159 32 381.159 30.4399 cv
cp
s
save_ctm
/Helvetica*4 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
444.279 35.2402 mov
(2) sh
restore_ctm
376.359 46.1602 mo
380.439 50.2402 ln
380.439 46.1602 mo
376.359 50.2402 ln
s
save_ctm
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
418.6 52.8799 mov
0.0278625 0 (co) ash
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
433.355 52.8799 mov
0.0278625 0 (mpr) ash
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
457.408 52.8799 mov
(e) sh
/Helvetica*9 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
465.176 52.8799 mov
0.027832 0 (ss) ash
restore_ctm
375.52 65.7197 mo
381.279 65.7197 ln
378.399 62.8398 mo
378.399 68.6001 ln
s
save_ctm
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
418.6 70.3999 mov
(c) sh
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
425.546 70.3999 mov
(r) sh
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
430.167 70.3999 mov
(a) sh
%ADOBeginSubsetFont: Helvetica AddGlyphs

systemdict begin
/Helvetica 
findfont dup
/Private get begin
/CharStrings get begin
/f 
<10bf31706fd71d386b83230daddba58a9e6370f44bacd52b1729701425a3
043058b817c8fb50597ee8d81edc0a37a40b7e19b23074ce2d363afa5ee9
6552508937dc332c9dd4e8b3c28e57028b5f6b663be18248199b1c2918b8
051d7d1a830acbce6746> ND 
end end
end
/Helvetica findfont /Encoding get
dup 102 /f put
pop
%ADOEndSubsetFont
/Helvetica*12 
[
102{/.notdef}repeat /f 153{/.notdef}repeat
] /Helvetica nfnt
/Helvetica*12 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
437.893 70.3999 mov
(f) sh
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
441.748 70.3999 mov
-0.013916 0 (ty) ash
restore_ctm
save_ctm
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
418.6 87.9199 mov
(g) sh
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
426.395 87.9199 mov
(c) sh
restore_ctm
375.52 83.2402 mo
381.279 83.2402 ln
378.399 80.3599 mo
378.399 86.1201 ln
376.359 81.2002 mo
380.439 85.2798 ln
380.439 81.2002 mo
376.359 85.2798 ln
s
save_ctm
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
433.359 87.9199 mov
(c) sh
restore_ctm
376.119 98.48 mo
380.68 98.48 ln
380.68 103.04 ln
376.119 103.04 ln
376.119 98.48 ln
cp
s
save_ctm
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
418.6 105.44 mov
(g) sh
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
426.395 105.44 mov
(o) sh
restore_ctm
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
418.6 123.08 mov
(g) sh
/Helvetica*11 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
426.381 123.08 mov
(z) sh
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
433.383 123.08 mov
(i) sh
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
436.514 123.08 mov
(p) sh
gsave
372.279 124.64 mo
384.64 124.64 ln
384.64 112.28 ln
372.279 112.28 ln
372.279 124.64 ln
clp
378.399 122.12 mo
381.279 118.4 ln
378.399 114.68 ln
375.52 118.4 ln
378.399 122.12 ln
cp
s
grestore
save_ctm
restore_ctm
378.399 139.64 mo
381.64 134 ln
375.159 134 ln
378.399 139.64 ln
cp
s
save_ctm
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
418.6 140.6 mov
(i) sh
%ADOBeginSubsetFont: Helvetica AddGlyphs

systemdict begin
/Helvetica 
findfont dup
/Private get begin
/CharStrings get begin
/j 
<10bf317009da6a99577db5f63a83c001a21d18a86bd90b3c8df3073d7f9b
242d2d27cd27bd98e32434aa6b2a2cc8a91b030aea191d74da9bc97e84da
93511f704fdc01f9217754313026916ed58dadd892e89b70cd443159fb99
873295dece> ND 
end end
end
/Helvetica findfont /Encoding get
dup 106 /j put
pop
%ADOEndSubsetFont
/Helvetica*13 
[
106{/.notdef}repeat /j 149{/.notdef}repeat
] /Helvetica nfnt
/Helvetica*13 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
421.731 140.6 mov
(j) sh
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
424.863 140.6 mov
(p) sh
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
432.644 140.6 mov
(e) sh
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
440.426 140.6 mov
(g) sh
restore_ctm
save_ctm
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
418.6 158.12 mov
(m) sh
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
430.237 158.12 mov
(c) sh
restore_ctm
/Helvetica*12 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
437.199 158.12 mov
(f) sh
gsave
372.279 159.08 mo
384.64 159.08 ln
384.64 147.32 ln
372.279 147.32 ln
372.279 159.08 ln
clp
375.159 155.36 mo
381.64 155.36 ln
378.399 149.72 ln
375.159 155.36 ln
cp
s
grestore
save_ctm
restore_ctm
save_ctm
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
418.6 175.64 mov
(p) sh
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
426.381 175.64 mov
(a) sh
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
434.162 175.64 mov
(r) sh
/Helvetica*9 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
438.839 175.64 mov
(s) sh
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
445.841 175.64 mov
(e) sh
restore_ctm
375.64 170 mo
377.68 170 ln
378.399 168.08 ln
379 170 ln
381.04 170 ln
379.479 171.2 ln
380.079 173.24 ln
378.399 172.04 ln
376.6 173.24 ln
377.199 171.2 ln
375.64 170 ln
cp
s
save_ctm
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
453.64 175.64 mov
(r) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Helvetica AddGlyphs

systemdict begin
/Helvetica 
findfont dup
/Private get begin
/CharStrings get begin
/v 
<10bf317069b1fd714631eca10c760070117668a0c05e5b38c7d861f456c0
e3dd6317ac8060fdad17b6a854b5db0fcf934a34a5a2> ND 
end end
end
/Helvetica findfont /Encoding get
dup 118 /v put
pop
%ADOEndSubsetFont
/Helvetica*14 
[
118{/.notdef}repeat /v 137{/.notdef}repeat
] /Helvetica nfnt
/Helvetica*14 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
418.6 193.28 mov
(v) sh
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
425.434 193.28 mov
(o) sh
restore_ctm
376 187.16 mo
377.68 187.16 ln
378.399 185.72 ln
379.119 187.16 ln
380.8 187.16 ln
379.84 188.6 ln
380.8 190.04 ln
379.119 190.04 ln
378.399 191.479 ln
377.68 190.04 ln
376 190.04 ln
376.96 188.6 ln
376 187.16 ln
cp
s
save_ctm
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
433.239 193.28 mov
(r) sh
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
437.93 193.28 mov
0.0556946 0 (tex) ash
restore_ctm
save_ctm
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
418.6 210.8 mov
(a) sh
/Helvetica*14 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
426.395 210.8 mov
(v) sh
restore_ctm
360.52 206.12 mo
396.279 206.12 ln
s
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
433.239 210.8 mov
(e) sh
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
441.034 210.8 mov
(r) sh
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
445.725 210.8 mov
(a) sh
/Helvetica*10 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
453.521 210.8 mov
(g) sh
/Helvetica*7 findfont [13.92 0 0 -13.92 0 0 ]mfnt sfnt
BuildWidthShowArray
461.316 210.8 mov
(e) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
LH
(%%[Page: 1]%%) = 
%%PageTrailer

%%Trailer
%%BoundingBox: 13 13 599 780
%%DocumentNeededResources: 
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_WinNT_Compat 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
ehsave restore
%%Pages: 1
(%%[LastPage]%%) = 
%%EOF
%-12345X@PJL EOJ
%-12345X