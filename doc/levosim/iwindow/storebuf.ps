%!PS-Adobe-3.0
%%Title: (storebuf.dr)
%%Creator: (AppleWorks: LaserWriter 8 8.7)
%%CreationDate: (12:46 Tuesday, 2000 September, 26)
%%For: (dam)
%%Routing: (mailto:\000dmorano@ece.neu.edu)
%%Pages: 1
%%DocumentFonts: Helvetica
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedFonts: 
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%%DocumentMedia: (Default) 612 792 0 () ()
%RBINumCopies: 1
%RBINupNess: 1 1
%ADO_ImageableArea: 18 8 594 784
%RBIDocumentSuppliedFonts: 
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
userdict/dscInfo 5 dict dup begin
/Title(storebuf.dr)def
/Creator(AppleWorks: LaserWriter 8 8.7)def
/CreationDate(12:46 Tuesday, 2000 September, 26)def
/For(dam)def
/Pages 1 def
end put
%%BeginProlog
/md 207 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: lw8_feature-1.01
%%Copyright: Copyright 1990-1999 Adobe Systems Incorporated and Apple Computer Incorporated. All Rights Reserved.
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/Z{0 def}bd
/T true def
/F false def
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
F
}ifelse
def
/odictstk Z
/oopstk Z
/fcl
{
count oopstk sub dup 0 gt
{
{pop}repeat
}{
pop
}ifelse
countdictstack odictstk sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/sfcl2
{
/odictstk countdictstack store
count/oopstk xs
}bd
/efcl2
{
stopped{$error/newerror F put}if
fcl
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
/setcopies{
level2
{
1 dict begin/NumCopies exch def currentdict end setpagedevice
}{
userdict/#copies 3 -1 roll put
}ifelse
}def
level2 startnoload
/ststpgdev{}def
/dopgdev{}def
/stpgdev{}def
/buf Z
/didstop T def
/sfcl
{
/didstop T store
/odictstk countdictstack store
count/oopstk xs
currentfile cvx stopped
{
$error/newerror F put
didstop
{
save/didstop xs
/buf vmstatus exch sub exch pop dup 0 lt{pop 0}if
dup 64000 gt{pop 64000}if string store
{
currentfile buf readline
{
(}efcl)eq{exit}if
}{
/UnexpectedEOF errordict/rangecheck get exec
}ifelse
}loop
didstop restore
}if
}if
fcl
}bd
/efcl
{
/didstop F store
exec
stop
}bd
level2 endnoload level2 not startnoload
/setpagedevice where{pop/realstpgdev/setpagedevice ld}if
/SC_topddict Z
/SC_spdict Z
/$spusrdict F def
/dopgdev
{
userdict/setpagedevice undef
$spusrdict
{
userdict/setpagedevice/realstpgdev load put
/$spusrdict F store
}if
SC_topddict realstpgdev
}bd
/stpgdev
{
SC_topddict dup 3 -1 roll
{
SC_spdict 2 index known
{
SC_spdict 2 index get
dup 3 -1 roll
{
put dup
}forall
pop put dup
}{
put dup
}ifelse
}forall
pop pop
}bd
/ststpgdev
{
/setpagedevice where
{
userdict eq
{
/$spusrdict T store
}if
}if
userdict/setpagedevice/stpgdev load put
/SC_topddict 0 dict store
/SC_spdict 3 dict begin
/InputAttributes 0 dict def
/Policies 0 dict def
/OutputAttributes 0 dict def
currentdict
end
store
}def
/sfcl/sfcl2 ld
/efcl/efcl2 ld
level2 not endnoload
%%EndFile
%%BeginFile: lw8_basic-4.0
/xdf{exch def}bd
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
12{ld}repeat
/framewidth -1 def
/QDframwid -1 def
/numframes Z
/mTS matrix def
/$m matrix def
/av 87 def
/por T def
/normland F def
/psb-nosave{}def
/pse-nosave{}def
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level3
/languagelevel where
{
pop languagelevel 3 ge
}{
F
}ifelse
def
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/devg/DeviceGray def
/devr/DeviceRGB def
/devc/DeviceCMYK def
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/devg[/DeviceGray]def
/devr[/DeviceRGB]def
/devc[/DeviceCMYK]def
level2 not endnoload
/pm Z
/mT Z
/sD Z
/mTSsetup{
mT $m currentmatrix mTS concatmatrix pop
}bd
/pmSVsetup{
/pm save store
}bd
/initializepage
{
mT concat
}bd
/endp
{
pm restore
}bd
/adjRect
{
dup 2 mul 6 2 roll
4 index sub exch 5 -1 roll sub exch
4 2 roll
4 index add exch 5 -1 roll add exch
4 2 roll
}bd
/frame1up
{
gS
mTS setmatrix
QDframwid lw
/setstrokeadjust where{pop T setstrokeadjust}if
clippath pathbbox
2 index sub exch
3 index sub exch
currentlinewidth framewidth mul
adjRect
numframes dup 0 lt{pop 0}if
{
4 copy
rS
currentlinewidth framewidth
mul 4 mul
adjRect
}repeat
pop pop pop pop
gR
}bd
/$c devr def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
level3 startnoload
%%BeginFile: lw8_safeclipL12-1.0
/rectclip where
{
pop/rCa/rectclip ld
}{
/rCa
{
np 0
1 index length 4 idiv
{
2 copy
4 getinterval
aload pop
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
4 add
}repeat
clip np
pop pop
}bd
}ifelse
/savedstack Z
/subsavedstack Z
/execstring Z
/saferCa
{
/execstring xs
/odictstk countdictstack store
/oopstk 0 store
count 0 ne
{
savedstack 0 eq{
count 100 gt{count}{100}ifelse
array/savedstack xs
}{
count savedstack length gt
{
count array/savedstack xs
}if
}ifelse
count savedstack 0 3 -1 roll
getinterval
astore/subsavedstack xs
}{
/subsavedstack 0 store
}ifelse
execstring cvx stopped
{
$error/newerror F put
newpath
}if
fcl
subsavedstack 0 ne{
subsavedstack aload pop
}if
}bd
%%EndFile
level3 endnoload level3 not startnoload
%%BeginFile: lw8_safeclipL3-1.0
/saferCa/pop ld
%%EndFile
level3 not endnoload
%%BeginFile: lw8_level1_colorspace-2.0
/G/setgray ld
/:F1/setgray ld
/:F/setrgbcolor ld
/:F4/setcmykcolor where
{
pop
/setcmykcolor ld
}{
{
3
{
dup
3 -1 roll add
dup 1 gt{pop 1}if
1 exch sub
4 1 roll
}repeat
pop
setrgbcolor
}bd
}ifelse
/:Fx
{
counttomark
{0{G}0{:F}{:F4}}
exch get
exec
pop
}bd
/$cs Z
/:rg{devr :ss}bd
/:sc{$cs :ss}bd
/:dc
{
dup type/arraytype eq{0 get}if
dup/DeviceCMYK eq
{
pop devc
}{
/DeviceGray eq
{
devg
}{
devr
}ifelse
}ifelse
/$cs xdf
}bd
/:sgl{}def
/:dr{}bd
/:fCRD{pop}bd
/:ckcs{}bd
/:ss{/$c xdf}bd
%%EndFile
%%BeginFile: lw8_uniform_graphics-2.0
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/@c
{
moveto 0 rlineto stroke
}bd
/@w
{
moveto 0 exch rlineto stroke
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: lw8_basic_text-3.0
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg T def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg F store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/$o 1. def
/gl{$o G}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding dup 9/space put dup 39/quotesingle put 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/Euro/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
/$ckeyd md def
/:skey
{
1 index maxlength 2 index
length sub
ge
{
begin
/$mkeys 20 dict def
/$mkeys load
end
dup/$ckeyd xs
}if
3 1 roll put
}bd
/fD1pass
{
40
$ckeyd
//md
ne
{
pop 1
}if
$ckeyd exch
:skey
}bd
/:searchdict Z
/:searchdict
{
exch 2 copy
known
{
get
}{
exch/$mkeys
get
:searchdict
}ifelse
}bd
/lU
{
//md exch 2 copy
known
{
get
}{
exch
/$mkeys get
:searchdict
}ifelse
}bd
/:xs{
exch 0 1 2 index length 1 sub{
3 copy
gS 1 getinterval show gR
exch
get 0.0
rm
}for pop pop
}bd
/:ys{
exch 0 1 2 index length 1 sub{
3 copy
gS 1 getinterval show gR
exch
get 0.0 exch
rm
}for pop pop
}bd
/:xys{
exch 0 1 2 index length 1 sub{
3 copy
gS 1 getinterval show gR
exch 2 mul 2 copy
1 add get 3 -2 roll get exch
rm
}for pop pop
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
/fD1pass/def ld
/lU/load ld
level2{
/:xs/xshow ld
/:ys/yshow ld
/:xys/xyshow ld
}if
level2 not endnoload
/:xbl{
currentpoint
2 index exec
:M
.03 ps mul currentpoint
2 index 0.0
rm
3 index
exec
:M currentpoint
2 index dup
rm
3 index exec
:M
0.0 1 index
rm exch
exec
neg 0.0 exch
rm
}bd
/:xot{
currentpoint -2.0 0.0 rm 2 index exec :M
currentpoint 0.0 -2.0 rm 2 index exec :M
currentpoint 0.0 2.0 rm 2 index exec :M
currentpoint 2.0 0.0 rm 2 index exec :M
gS gl exec currentpoint gR :M
}bd
/:xsh{
2 ps 0.05 mul add
2 copy
currentpoint
5 2 roll
0.0 rm
exec
currentpoint
6 2 roll
sub moveto
:xot
moveto
}bd
/fD Z
/sf Z
/scf Z
/sf1pass
{
lU setfont
}bd
/scf1pass
{
exch lU exch scalefont fD
}bd
/scf2pass
{
scalefont fD
}bd
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff fD
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff fD
}bd
/ps Z
/fz{/ps xs}bd
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
fD
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
/fD/def ld/sf/setfont ld /scf/scf2pass ld
%RBIIncludeNonPPDFeature: NumCopies 1
%RBIBeginNonPPDFeature: WaitTimeout 600
 600/languagelevel where{pop languagelevel 2 ge}{false}ifelse{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%RBIEndNonPPDFeature
sfcl{
%%BeginFeature: *InputSlot Upper

%%EndFeature

}efcl

sfcl{
%%BeginFeature: *ManualFeed False
level2 {1 dict dup /ManualFeed false put setpagedevice}{statusdict begin /manualfeed false store end} ifelse
%%EndFeature

}efcl

sfcl{
%%BeginFeature: *PageRegion Letter
level2 { 
		2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
	}{
		/letter where {pop letter}{letterR} ifelse
	} ifelse
%%EndFeature

}efcl

(dam)setjob
/mT[1 0 0 -1 18 784]def
%RBIIncludeStartNup
/sD 16 dict def
%%IncludeFont: Helvetica
/f44/Helvetica
:mre
/f58 f44 12 scf
{/Courier findfont[10 0 0 -10 0 0]:mf setfont}stopped{$error/newerror F put}if
%PostScript Hack by Mike Brors 12/7/90
/DisableNextSetRGBColor
	{
	userdict begin
	/setrgbcolor 
		{
		pop
		pop
		pop
		userdict begin
		/setrgbcolor systemdict /setrgbcolor get def
		end
		} def
	end
} bind def
/bcarray where {
	pop
	bcarray 2 {
		/da 4 ps div def
		df setfont gsave cs wi
		1 index 0 ne{exch da add exch}if grestore setcharwidth
		cs 0 0 smc da 0 smc da da smc 0 da smc c
		gray
		{ gl}
		{1 setgray}ifelse
		da 2. div dup moveto show
	}bind put
} if
%
% Used to snap to device pixels, 1/4th of the pixel in.
/stp {  % x y  pl  x y                % Snap To Pixel, pixel  (auto stroke adjust)
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} bind def

/snapmoveto { % x y  m  -             % moveto, auto stroke adjust
	stp  moveto
} bind def

/snaplineto { % x y  l  -             % lineto, auto stroke adjust
	stp lineto
} bind def
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%RBIIncludePageSlotInvocation
mTSsetup
pmSVsetup
initializepage
(dam; page: 1 of 1)setjob
%%EndPageSetup
gS 0 0 576 776 rC
206.5 152.5 144 378 rS
225 135 120 12 rC
gR
gS 220 99 130 48 rC
225 144 :M
f58 sf
.087 .009(Memory Store Buffer)J
gR
gS 0 0 576 776 rC
109 350 197.5 @c
278.5 314.5 54 18 rS
278.5 350.5 54 18 rS
278.5 386.5 54 18 rS
278.5 422.5 54 18 rS
278.5 458.5 54 18 rS
278.5 494.5 54 18 rS
109 350 323.5 @c
109 350 359.5 @c
109 350 395.5 @c
109 350 431.5 @c
109 350 467.5 @c
109 350 503.5 @c
396 315 57 12 rC
gR
gS 391 279 67 48 rC
396 324 :M
f58 sf
.553 .055(from ASes)J
gR
gS 0 0 576 776 rC
109 98 368.5 @c
126 351 56 12 rC
gR
gS 121 315 66 48 rC
126 360 :M
f58 sf
-.125(write bus)A
gR
gS 0 0 576 776 rC
109 98 251.5 @c
126 216 56 36 rC
gR
gS 121 180 66 72 rC
126 225 :M
f58 sf
-.252(load )A
126 237 :M
.177 .018(response )J
126 249 :M
.329(bus)A
gR
gS 0 0 576 776 rC
109 98 197.5 @c
126 162 56 36 rC
gR
gS 121 126 66 72 rC
126 171 :M
f58 sf
-.252(load )A
126 183 :M
-.192(request )A
126 195 :M
.329(bus)A
gR
gS 0 0 576 776 rC
-1 -1 99 198 1 1 107 188 @b
-1 -1 99 369 1 1 107 359 @b
98 369 -1 1 108 377 1 98 368 @a
-1 -1 198 261 1 1 206 251 @b
98 198 -1 1 108 206 1 98 197 @a
197 243 -1 1 207 251 1 197 242 @a
378 180 70 12 rC
gR
gS 373 144 80 48 rC
378 189 :M
f58 sf
-.334(backwarding  )A
gR
gS 0 0 576 776 rC
-1 -1 351 198 1 1 359 188 @b
350 198 -1 1 360 206 1 350 197 @a
109 350 251.5 @c
378 234 66 12 rC
gR
gS 373 198 76 48 rC
378 243 :M
f58 sf
-.278(forewarding  )A
gR
gS 0 0 576 776 rC
-1 -1 450 261 1 1 458 251 @b
449 243 -1 1 459 251 1 449 242 @a
262 260.5 251 @w
73 260 251.5 @c
28 224 242.5 @c
28 224 260.5 @c
19 251.5 242 @w
10 251 251.5 @c
18 18 378 60 rC
gR
gS 13 0 388 78 rC
18 27 :M
f58 sf
-.19(Idea for the Levo Write Store Buffer after talking with Alireza on Tuesday )A
18 39 :M
-.068(September 26, 2000.  The Store Buffer object instantiates subobjects as)A
18 51 :M
-.211(need to implement individual FIFOs for each of the ASes that can commit)A
18 63 :M
-.316(a write.  The main object also handles all ciontention for shared resources)A
18 75 :M
-.176(like the outgoing buses.)A
gR
gS 72 189 18 12 rC
gR
gS 67 153 28 48 rC
72 198 :M
f58 sf
(1)S
gR
gS 72 243 18 12 rC
gR
gS 67 207 28 48 rC
72 252 :M
f58 sf
(2)S
gR
gS 72 360 18 12 rC
gR
gS 67 324 28 48 rC
72 369 :M
f58 sf
(3)S
gR
gS 459 180 18 12 rC
gR
gS 454 144 28 48 rC
459 189 :M
f58 sf
(4)S
gR
gS 459 234 18 12 rC
gR
gS 454 198 28 48 rC
459 243 :M
f58 sf
(5)S
gR
gS 459 306 18 12 rC
gR
gS 454 270 28 48 rC
459 315 :M
f58 sf
(6)S
gR
gS 18 576 288 84 rC
gR
gS 13 540 298 120 rC
18 585 :M
f58 sf
-.086(1\) single master point-to-point set of buses)A
18 597 :M
-.086(2\) single master point-to-point set of buses)A
18 609 :M
-.086(3\) single master point-to-point set of buses)A
18 621 :M
-.109(4\) multimaster bus \(use LBUSINT on input\))A
18 633 :M
-.09(5\) multimaster bus \(use LBUSINT on output\))A
18 645 :M
-.118(6\) simple bus but do not model it explicitly, rather)A
18 657 :M
-.255(    model it with just a method call to the store buffer)A
gR
gS 0 0 576 776 rC
152 189 -1 1 171 206 1 152 188 @a
152 243 -1 1 171 260 1 152 242 @a
152 360 -1 1 171 377 1 152 359 @a
404 189 -1 1 423 206 1 404 188 @a
404 243 -1 1 423 260 1 404 242 @a
endp
showpage
%%PageTrailer
%%Trailer
end
%%EOF
